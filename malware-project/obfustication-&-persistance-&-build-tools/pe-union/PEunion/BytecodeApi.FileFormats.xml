<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BytecodeApi.FileFormats</name>
    </assembly>
    <members>
        <member name="T:BytecodeApi.FileFormats.Coff.ImageCharacteristics">
            <summary>
            Specifies the values for the <see cref="P:BytecodeApi.FileFormats.Coff.ImageCoffHeader.Characteristics" /> property of the COFF header of a PE image file.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageCharacteristics.RelocationStripped">
            <summary>
            Specifies that the file does not contain base relocations and must therefore be loaded at its preferred base address. If the base address is not available, the loader reports an error. The default behavior of the linker is to strip base relocations from executable (EXE) files.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageCharacteristics.Executable">
            <summary>
            Specifies that the image file is valid and can be run. If this flag is not set, it indicates a linker error.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageCharacteristics.LineNumbersStripped">
            <summary>
            Specifies that COFF line numbers have been removed. This flag is deprecated and should be zero.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageCharacteristics.SymbolsStripped">
            <summary>
            Specifies that COFF symbol table entries for local symbols have been removed. This flag is deprecated and should be zero.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageCharacteristics.AggressivelyTrimWorkingSet">
            <summary>
            Specifies to aggressively trim working set. This flag is deprecated for Windows 2000 and later and must be zero.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageCharacteristics.LargeAddressAware">
            <summary>
            Specifies that the application can handle > 2 GB addresses.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageCharacteristics.BytesReversedLo">
            <summary>
            Specifies little endian: The least significant bit (LSB) precedes the most significant bit (MSB) in memory. This flag is deprecated and should be zero.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageCharacteristics.Machine32">
            <summary>
            Specifies that the machine is based on a 32-bit-word architecture.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageCharacteristics.DebugStripped">
            <summary>
            Specifies that debugging information is removed from the image file.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageCharacteristics.RemovableRunFromSwap">
            <summary>
            Specifies that if the image is on removable media, to fully load it and copy it to the swap file.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageCharacteristics.NetRunFromSwap">
            <summary>
            Specifies that if the image is on network media, to fully load it and copy it to the swap file.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageCharacteristics.System">
            <summary>
            Specifies that the image file is a system file, not a user program.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageCharacteristics.Dll">
            <summary>
            Specifies that the image file is a dynamic-link library (DLL). Such files are considered executable files for almost all purposes, although they cannot be directly run.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageCharacteristics.UpSystem">
            <summary>
            Specifies that the file should be run only on a uniprocessor machine.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageCharacteristics.BytesReversedHi">
            <summary>
            Specifies big endian: the MSB precedes the LSB in memory. This flag is deprecated and should be zero.
            </summary>
        </member>
        <member name="T:BytecodeApi.FileFormats.Coff.ImageCoffHeader">
            <summary>
            Represents the COFF header of a PE image file.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageCoffHeader.Machine">
            <summary>
            Gets or sets the number that identifies the type of target machine.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageCoffHeader.NumberOfSections">
            <summary>
            Gets or sets the number of sections. This indicates the size of the section table, which immediately follows the headers.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageCoffHeader.TimeDateStamp">
            <summary>
            Gets or sets the low 32 bits of the number of seconds since 01.01.1970 00:00:00, that indicates when the file was created.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageCoffHeader.TimeDateStampValue">
            <summary>
            Gets the <see cref="T:System.DateTime" /> representation of the <see cref="P:BytecodeApi.FileFormats.Coff.ImageCoffHeader.TimeDateStamp" /> property.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageCoffHeader.PointerToSymbolTable">
            <summary>
            Gets or sets the file offset of the COFF symbol table, or zero if no COFF symbol table is present. This value should be zero for an image because COFF debugging information is deprecated.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageCoffHeader.NumberOfSymbols">
            <summary>
            Gets or sets the number of entries in the symbol table. This data can be used to locate the string table, which immediately follows the symbol table. This value should be zero for an image because COFF debugging information is deprecated.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageCoffHeader.SizeOfOptionalHeader">
            <summary>
            Gets or sets the size of the optional header, which is required for executable files but not for object files. This value should be zero for an object file.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageCoffHeader.Characteristics">
            <summary>
            Gets or sets the flags that indicate the attributes of the file.
            </summary>
        </member>
        <member name="M:BytecodeApi.FileFormats.Coff.ImageCoffHeader.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.FileFormats.Coff.ImageCoffHeader" /> class.
            </summary>
        </member>
        <member name="T:BytecodeApi.FileFormats.Coff.ImageDataDirectory">
            <summary>
            Represents a data directory of a PE image file.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageDataDirectory.Name">
            <summary>
            Gets the name of the data directory. This may not be a valid enum value of <see cref="T:BytecodeApi.FileFormats.Coff.ImageDataDirectoryName" />, if the image has more than 14 data directories.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageDataDirectory.VirtualAddress">
            <summary>
            Gets or sets the address of the first byte of a table or string that Windows uses.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageDataDirectory.Size">
            <summary>
            Gets or sets size of a table or string that Windows uses.
            </summary>
        </member>
        <member name="M:BytecodeApi.FileFormats.Coff.ImageDataDirectory.#ctor(BytecodeApi.FileFormats.Coff.ImageDataDirectoryName,System.UInt32,System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.FileFormats.Coff.ImageDataDirectory" /> class.
            </summary>
        </member>
        <member name="M:BytecodeApi.FileFormats.Coff.ImageDataDirectory.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:BytecodeApi.FileFormats.Coff.ImageDataDirectoryName">
            <summary>
            Specifies the name of a data directory entry of a PE image file.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageDataDirectoryName.ExportTable">
            <summary>
            Specifies the export table address and size.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageDataDirectoryName.ImportTable">
            <summary>
            Specifies the import table address and size.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageDataDirectoryName.ResourceTable">
            <summary>
            Specifies the resource table address and size.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageDataDirectoryName.ExceptionTable">
            <summary>
            Specifies the exception table address and size.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageDataDirectoryName.CertificateTable">
            <summary>
            Specifies the attribute certificate table address and size.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageDataDirectoryName.BaseRelocationTable">
            <summary>
            Specifies the base relocation table address and size.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageDataDirectoryName.DebugDirectory">
            <summary>
            Specifies the debug data starting address and size.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageDataDirectoryName.Architecture">
            <summary>
            Reserved, must be zero.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageDataDirectoryName.GlobalPointer">
            <summary>
            Specifies the RVA of the value to be stored in the global pointer register. The size member of this structure must be set to zero.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageDataDirectoryName.TlsTable">
            <summary>
            Specifies the thread local storage (TLS) table address and size.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageDataDirectoryName.LoadConfigurationTable">
            <summary>
            Specifies the load configuration table address and size.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageDataDirectoryName.BoundImportTable">
            <summary>
            Specifies the bound import table address and size.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageDataDirectoryName.ImportAddressTable">
            <summary>
            Specifies the import address table address and size.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageDataDirectoryName.DelayImportDescriptors">
            <summary>
            Specifies the delay import descriptor address and size.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageDataDirectoryName.ClrRuntimeHeader">
            <summary>
            Specifies the CLR runtime header address and size.
            </summary>
        </member>
        <member name="T:BytecodeApi.FileFormats.Coff.ImageDllCharacteristics">
            <summary>
            Specifies the values for the <see cref="P:BytecodeApi.FileFormats.Coff.ImageOptionalHeader.DllCharacteristics" /> property of the optional header of a PE image file.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageDllCharacteristics.HighEntropyVA">
            <summary>
            Specifies that the image can handle a high entropy 64-bit virtual address space.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageDllCharacteristics.DynamicBase">
            <summary>
            Specifies that the DLL can be relocated at load time.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageDllCharacteristics.ForceIntegrity">
            <summary>
            Specifies that Code Integrity checks are enforced.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageDllCharacteristics.NxCompatible">
            <summary>
            Specifies that the image is NX compatible.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageDllCharacteristics.IsolationAware">
            <summary>
            Specifies that the image is isolation aware, but the image is not isolated.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageDllCharacteristics.NoSEH">
            <summary>
            Specifies that the image does not use structured exception (SE) handling. No SE handler may be called in the image.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageDllCharacteristics.DoNotBind">
            <summary>
            Specifies that the image is not bound.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageDllCharacteristics.AppContainer">
            <summary>
            Specifies that the image must execute in an AppContainer.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageDllCharacteristics.WdmDriver">
            <summary>
            Specifies that the image is a WDM driver.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageDllCharacteristics.ControlFlowGuard">
            <summary>
            Specifies that the image supports Control Flow Guard.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageDllCharacteristics.TerminalServerAware">
            <summary>
            Specifies that the image is terminal Server aware.
            </summary>
        </member>
        <member name="T:BytecodeApi.FileFormats.Coff.ImageDosHeader">
            <summary>
            Represents the DOS header of a PE image file.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageDosHeader.LastPageSize">
            <summary>
            Specifies the amount of bytes on last page of the file.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageDosHeader.PageCount">
            <summary>
            Specifies the amount of pages in the file.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageDosHeader.RelocationCount">
            <summary>
            Specifies the amount of relocations in the file.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageDosHeader.HeaderSize">
            <summary>
            Specifies the size of header in paragraphs.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageDosHeader.MinAlloc">
            <summary>
            Specifies the minimum extra paragraphs needed.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageDosHeader.MaxAlloc">
            <summary>
            Specifies the maximum extra paragraphs needed.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageDosHeader.InitialSS">
            <summary>
            Specifies the initial (relative) SS value.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageDosHeader.InitialSP">
            <summary>
            Specifies the initial SP value.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageDosHeader.Checksum">
            <summary>
            Specifies the file checksum.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageDosHeader.InitialIP">
            <summary>
            Specifies the initial IP value.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageDosHeader.InitialCS">
            <summary>
            Specifies the initial (relative) CS value.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageDosHeader.RelocationOffset">
            <summary>
            Specifies the file address of the relocation table.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageDosHeader.OverlayNumber">
            <summary>
            Specifies the overlay number.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageDosHeader.Reserved1">
            <summary>
            Reserved.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageDosHeader.Reserved2">
            <summary>
            Reserved.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageDosHeader.Reserved3">
            <summary>
            Reserved.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageDosHeader.Reserved4">
            <summary>
            Reserved.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageDosHeader.OemIdentifier">
            <summary>
            Specifies the OEM Identifier.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageDosHeader.OemInformation">
            <summary>
            Specifies the OEM identifier.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageDosHeader.Reserved5">
            <summary>
            Reserved.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageDosHeader.Reserved6">
            <summary>
            Reserved.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageDosHeader.Reserved7">
            <summary>
            Reserved.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageDosHeader.Reserved8">
            <summary>
            Reserved.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageDosHeader.Reserved9">
            <summary>
            Reserved.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageDosHeader.Reserved10">
            <summary>
            Reserved.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageDosHeader.Reserved11">
            <summary>
            Reserved.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageDosHeader.Reserved12">
            <summary>
            Reserved.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageDosHeader.Reserved13">
            <summary>
            Reserved.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageDosHeader.Reserved14">
            <summary>
            Reserved.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageDosHeader.PEHeaderOffset">
            <summary>
            Specifies the file address of new EXE header.
            </summary>
        </member>
        <member name="M:BytecodeApi.FileFormats.Coff.ImageDosHeader.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.FileFormats.Coff.ImageDosHeader" /> class.
            </summary>
        </member>
        <member name="T:BytecodeApi.FileFormats.Coff.ImageMachineType">
            <summary>
            Specifies the values for the <see cref="P:BytecodeApi.FileFormats.Coff.ImageCoffHeader.Machine" /> property of the COFF header of a PE image file.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageMachineType.Unknown">
            <summary>
            The machine is unspecified. It is assumed to be applicable to any machine type.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageMachineType.I386">
            <summary>
            Specifies the Intel 386 or later processors and compatible processors.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageMachineType.R3000">
            <summary>
            Specifies the MIPS R3000 little endian processor.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageMachineType.R4000">
            <summary>
            Specifies the MIPS R4000 little endian processor.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageMachineType.R10000">
            <summary>
            Specifies the MIPS R10000 little endian processor.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageMachineType.MIPSWCE2">
            <summary>
            Specifies the MIPS little endian WCE v2 processor.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageMachineType.Alpha">
            <summary>
            Specifies the Alpha AXP processor family.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageMachineType.SH3">
            <summary>
            Specifies the Hitachi SH-3 processor.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageMachineType.SH3DSP">
            <summary>
            Specifies the Hitachi SH3-DSP processor.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageMachineType.SH3E">
            <summary>
            Specifies the Hitachi SH-3E processor.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageMachineType.SH4">
            <summary>
            Specifies the Hitachi SH-4 processor.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageMachineType.SH5">
            <summary>
            Specifies the Hitachi SH-5 processor.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageMachineType.ARM">
            <summary>
            Specifies the ARM little endian processor.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageMachineType.Thumb">
            <summary>
            Specifies the ARM Thumb little endian processor.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageMachineType.ARMNT">
            <summary>
            Specifies the ARM Thumb-2 little endian processor.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageMachineType.AM33">
            <summary>
            Specifies the Matsushita AM33 processor.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageMachineType.PowerPC">
            <summary>
            Specifies the Power PC little endian processor.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageMachineType.PowerPCFP">
            <summary>
            Specifies the Power PC little endian with floating point support processor.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageMachineType.IA64">
            <summary>
            Specifies the Intel Itanium processor family.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageMachineType.MIPS16">
            <summary>
            Specifies the MIPS16 processor.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageMachineType.Alpha64">
            <summary>
            Specifies the Alpha 64-bit processor family.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageMachineType.MIPSFPU">
            <summary>
            Specifies the MIPS with FPU processor.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageMachineType.MIPSFPU16">
            <summary>
            Specifies the MIPS16 with FPU processor.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageMachineType.Tricore">
            <summary>
            Specifies the Infinion TriCore processor family.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageMachineType.CEF">
            <summary>
            Specifies the IMAGE_FILE_MACHINE_CEF (0x0CEF) constant.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageMachineType.EBC">
            <summary>
            Specifies EFI byte code.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageMachineType.RISCV32">
            <summary>
            Specifies the RISCV32 processor.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageMachineType.RISCV64">
            <summary>
            Specifies the RISCV64 processor.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageMachineType.RISCV128">
            <summary>
            Specifies the RISCV128 processor.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageMachineType.AMD64">
            <summary>
            Specifies the AMD64 processor.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageMachineType.M32R">
            <summary>
            Specifies the Mitsubishi M32R little endian processor.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageMachineType.ARM64">
            <summary>
            Specifies the ARM64 little endian processor.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageMachineType.CEE">
            <summary>
            Specifies the IMAGE_FILE_MACHINE_CEE (0xC0EE) constant.
            </summary>
        </member>
        <member name="T:BytecodeApi.FileFormats.Coff.ImageOptionalHeader">
            <summary>
            Represents the optional header of a PE image file. This is an abstract class.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageOptionalHeader.MajorLinkerVersion">
            <summary>
            Gets or sets the linker major version number.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageOptionalHeader.MinorLinkerVersion">
            <summary>
            Gets or sets the linker minor version number.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageOptionalHeader.SizeOfCode">
            <summary>
            Gets or sets the size of the code (text) section, or the sum of all code sections if there are multiple sections.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageOptionalHeader.SizeOfInitializedData">
            <summary>
            Gets or sets the size of the initialized data section, or the sum of all such sections if there are multiple data sections.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageOptionalHeader.SizeOfUninitializedData">
            <summary>
            Gets or sets the size of the uninitialized data section (BSS), or the sum of all such sections if there are multiple BSS sections.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageOptionalHeader.AddressOfEntryPoint">
            <summary>
            Gets or sets the address of the entry point relative to the image base when the executable file is loaded into memory. For program images, this is the starting address. For device drivers, this is the address of the initialization function. An entry point is optional for DLLs. When no entry point is present, this property must be zero.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageOptionalHeader.BaseOfCode">
            <summary>
            Gets or sets the address that is relative to the image base of the beginning-of-code section when it is loaded into memory.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageOptionalHeader.SectionAlignment">
            <summary>
            Gets or sets the alignment (in bytes) of sections when they are loaded into memory. It must be greater than or equal to <see cref="P:BytecodeApi.FileFormats.Coff.ImageOptionalHeader.FileAlignment" />. The default is the page size for the architecture.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageOptionalHeader.FileAlignment">
            <summary>
            Gets or sets the alignment factor (in bytes) that is used to align the raw data of sections in the image file. The value should be a power of 2 between 512 and 64 K, inclusive. The default is 512. If the <see cref="P:BytecodeApi.FileFormats.Coff.ImageOptionalHeader.SectionAlignment" /> is less than the architecture's page size, then <see cref="P:BytecodeApi.FileFormats.Coff.ImageOptionalHeader.FileAlignment" /> must match <see cref="P:BytecodeApi.FileFormats.Coff.ImageOptionalHeader.SectionAlignment" />.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageOptionalHeader.MajorOperatingSystemVersion">
            <summary>
            Gets or sets the major version number of the required operating system.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageOptionalHeader.MinorOperatingSystemVersion">
            <summary>
            Gets or sets the minor version number of the required operating system.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageOptionalHeader.MajorImageVersion">
            <summary>
            Gets or sets the major version number of the image.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageOptionalHeader.MinorImageVersion">
            <summary>
            Gets or sets the minor version number of the image.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageOptionalHeader.MajorSubsystemVersion">
            <summary>
            Gets or sets the major version number of the subsystem.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageOptionalHeader.MinorSubsystemVersion">
            <summary>
            Gets or sets the minor version number of the subsystem.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageOptionalHeader.Win32VersionValue">
            <summary>
            Reserved, must be zero.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageOptionalHeader.SizeOfImage">
            <summary>
            Gets or sets the size (in bytes) of the image, including all headers, as the image is loaded in memory. It must be a multiple of <see cref="P:BytecodeApi.FileFormats.Coff.ImageOptionalHeader.SectionAlignment" />.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageOptionalHeader.SizeOfHeaders">
            <summary>
            Gets or sets the combined size of an MS-DOS stub, PE header, and section headers rounded up to a multiple of <see cref="P:BytecodeApi.FileFormats.Coff.ImageOptionalHeader.FileAlignment" />.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageOptionalHeader.Checksum">
            <summary>
            Gets or sets the image file checksum. The algorithm for computing the checksum is incorporated into IMAGHELP.DLL. The following are checked for validation at load time: all drivers, any DLL loaded at boot time, and any DLL that is loaded into a critical Windows process.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageOptionalHeader.Subsystem">
            <summary>
            Gets or sets the subsystem that is required to run this image.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageOptionalHeader.DllCharacteristics">
            <summary>
            Gets or sets the "DllCharacteristics" attribute of the PE image optional header.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageOptionalHeader.LoaderFlags">
            <summary>
            Reserved, must be zero.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageOptionalHeader.NumberOfRvaAndSizes">
            <summary>
            Gets or sets the number of data-directory entries in the remainder of the optional header. Each describes a location and size.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageOptionalHeader.DataDirectories">
            <summary>
            Gets or sets the collection data directories of the PE image optional header.
            </summary>
        </member>
        <member name="M:BytecodeApi.FileFormats.Coff.ImageOptionalHeader.GetImageBase">
            <summary>
            Returns the <see cref="P:BytecodeApi.FileFormats.Coff.ImageOptionalHeader32.ImageBase" /> or <see cref="P:BytecodeApi.FileFormats.Coff.ImageOptionalHeader64.ImageBase" /> property of this instance.
            </summary>
            <returns>
            The <see cref="P:BytecodeApi.FileFormats.Coff.ImageOptionalHeader32.ImageBase" /> or <see cref="P:BytecodeApi.FileFormats.Coff.ImageOptionalHeader64.ImageBase" /> property of this instance.
            </returns>
        </member>
        <member name="T:BytecodeApi.FileFormats.Coff.ImageOptionalHeader32">
            <summary>
            Represents the optional header of a PE image file for x86 assemblies.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageOptionalHeader32.BaseOfData">
            <summary>
            Gets or sets the address that is relative to the image base of the beginning-of-data section when it is loaded into memory.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageOptionalHeader32.ImageBase">
            <summary>
            Gets or sets the preferred address of the first byte of image when loaded into memory; must be a multiple of 64 K. The default for DLLs is 0x10000000. The default for Windows CE EXEs is 0x00010000. The default for Windows NT, Windows 2000, Windows XP, Windows 95, Windows 98, and Windows Me is 0x00400000.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageOptionalHeader32.SizeOfStackReserve">
            <summary>
            Gets or sets the size of the stack to reserve. Only <see cref="P:BytecodeApi.FileFormats.Coff.ImageOptionalHeader32.SizeOfStackCommit" /> is committed; the rest is made available one page at a time until the reserve size is reached.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageOptionalHeader32.SizeOfStackCommit">
            <summary>
            Gets or sets the size of the stack to commit.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageOptionalHeader32.SizeOfHeapReserve">
            <summary>
            Gets or sets the size of the local heap space to reserve. Only <see cref="P:BytecodeApi.FileFormats.Coff.ImageOptionalHeader32.SizeOfHeapCommit" /> is committed; the rest is made available one page at a time until the reserve size is reached.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageOptionalHeader32.SizeOfHeapCommit">
            <summary>
            Gets or sets the size of the local heap space to commit.
            </summary>
        </member>
        <member name="M:BytecodeApi.FileFormats.Coff.ImageOptionalHeader32.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.FileFormats.Coff.ImageOptionalHeader32" /> class.
            </summary>
        </member>
        <member name="T:BytecodeApi.FileFormats.Coff.ImageOptionalHeader64">
            <summary>
            Represents the optional header of a PE image file for x64 assemblies.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageOptionalHeader64.ImageBase">
            <summary>
            Gets or sets the preferred address of the first byte of image when loaded into memory; must be a multiple of 64 K. The default for DLLs is 0x10000000. The default for Windows CE EXEs is 0x00010000. The default for Windows NT, Windows 2000, Windows XP, Windows 95, Windows 98, and Windows Me is 0x00400000.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageOptionalHeader64.SizeOfStackReserve">
            <summary>
            Gets or sets the size of the stack to reserve. Only <see cref="P:BytecodeApi.FileFormats.Coff.ImageOptionalHeader64.SizeOfStackCommit" /> is committed; the rest is made available one page at a time until the reserve size is reached.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageOptionalHeader64.SizeOfStackCommit">
            <summary>
            Gets or sets the size of the stack to commit.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageOptionalHeader64.SizeOfHeapReserve">
            <summary>
            Gets or sets the size of the local heap space to reserve. Only <see cref="P:BytecodeApi.FileFormats.Coff.ImageOptionalHeader64.SizeOfHeapCommit" /> is committed; the rest is made available one page at a time until the reserve size is reached.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageOptionalHeader64.SizeOfHeapCommit">
            <summary>
            Gets or sets the size of the local heap space to commit.
            </summary>
        </member>
        <member name="M:BytecodeApi.FileFormats.Coff.ImageOptionalHeader64.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.FileFormats.Coff.ImageOptionalHeader64" /> class.
            </summary>
        </member>
        <member name="T:BytecodeApi.FileFormats.Coff.ImageSection">
            <summary>
            Represents a section of a PE image file, containing the header and a <see cref="T:System.Byte" />[] representing the contents of the section.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageSection.Header">
            <summary>
            Gets or sets the section header.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageSection.Data">
            <summary>
            Gets or sets a <see cref="T:System.Byte" />[] representing the contents of the section.
            </summary>
        </member>
        <member name="M:BytecodeApi.FileFormats.Coff.ImageSection.#ctor(BytecodeApi.FileFormats.Coff.ImageSectionHeader,System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.FileFormats.Coff.ImageSection" /> class.
            </summary>
            <param name="header">The header of the section.</param>
            <param name="data">A <see cref="T:System.Byte" />[] representing the contents of the section.</param>
        </member>
        <member name="M:BytecodeApi.FileFormats.Coff.ImageSection.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:BytecodeApi.FileFormats.Coff.ImageSectionFlags">
            <summary>
            Specifies the values for the <see cref="P:BytecodeApi.FileFormats.Coff.ImageSectionHeader.Characteristics" /> property of a section header of a PE image file.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageSectionFlags.NoPadding">
            <summary>
            Specifies that the section should not be padded to the next boundary. This flag is obsolete and is replaced by <see cref="F:BytecodeApi.FileFormats.Coff.ImageSectionFlags.Align1" />. This is valid only for object files.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageSectionFlags.ContainsCode">
            <summary>
            Specifies that the section contains executable code.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageSectionFlags.ContainsInitializedData">
            <summary>
            Specifies that the section contains initialized data.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageSectionFlags.ContainsUninitializedData">
            <summary>
            Specifies that the section contains uninitialized data.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageSectionFlags.ContainsInformation">
            <summary>
            Specifies that the section contains comments or other information. The .drectve section has this type. This is valid for object files only.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageSectionFlags.Remove">
            <summary>
            Specifies that the section will not become part of the image. This is valid only for object files.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageSectionFlags.ContainsComdat">
            <summary>
            Specifies that the section contains COMDAT data. This is valid only for object files.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageSectionFlags.ContainsGlobalPointerData">
            <summary>
            Specifies that the section contains data referenced through the global pointer (GP).
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageSectionFlags.Align1">
            <summary>
            Specifies to align data on a 1-byte boundary. Valid only for object files.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageSectionFlags.Align2">
            <summary>
            Specifies to align data on a 2-byte boundary. Valid only for object files.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageSectionFlags.Align4">
            <summary>
            Specifies to align data on a 4-byte boundary. Valid only for object files.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageSectionFlags.Align8">
            <summary>
            Specifies to align data on a 8-byte boundary. Valid only for object files.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageSectionFlags.Align16">
            <summary>
            Specifies to align data on a 16-byte boundary. Valid only for object files.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageSectionFlags.Align32">
            <summary>
            Specifies to align data on a 32-byte boundary. Valid only for object files.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageSectionFlags.Align64">
            <summary>
            Specifies to align data on a 64-byte boundary. Valid only for object files.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageSectionFlags.Align128">
            <summary>
            Specifies to align data on a 128-byte boundary. Valid only for object files.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageSectionFlags.Align256">
            <summary>
            Specifies to align data on a 256-byte boundary. Valid only for object files.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageSectionFlags.Align512">
            <summary>
            Specifies to align data on a 512-byte boundary. Valid only for object files.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageSectionFlags.Align1024">
            <summary>
            Specifies to align data on a 1024-byte boundary. Valid only for object files.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageSectionFlags.Align2048">
            <summary>
            Specifies to align data on a 2048-byte boundary. Valid only for object files.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageSectionFlags.Align4096">
            <summary>
            Specifies to align data on a 4096-byte boundary. Valid only for object files.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageSectionFlags.Align8192">
            <summary>
            Specifies to align data on a 8192-byte boundary. Valid only for object files.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageSectionFlags.ContainsExtendedRelocations">
            <summary>
            Specifies that the section contains extended relocations.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageSectionFlags.Discardable">
            <summary>
            Specifies that the section can be discarded as needed.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageSectionFlags.NotCached">
            <summary>
            Specifies that the section cannot be cached.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageSectionFlags.NotPaged">
            <summary>
            Specifies that the section is not pageable.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageSectionFlags.Shared">
            <summary>
            Specifies that the section can be shared in memory.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageSectionFlags.Execute">
            <summary>
            Specifies that the section can be executed as code.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageSectionFlags.Read">
            <summary>
            Specifies that the section can be read.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageSectionFlags.Write">
            <summary>
            Specifies that the section can be written to.
            </summary>
        </member>
        <member name="T:BytecodeApi.FileFormats.Coff.ImageSectionHeader">
            <summary>
            Represents a section header of a PE image file.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageSectionHeader.Name">
            <summary>
            Gets or sets an 8-byte, null-padded UTF-8 encoded string. If the string is exactly 8 characters long, there is no terminating null. For longer names, this property contains a slash (/) that is followed by an ASCII representation of a decimal number that is an offset into the string table. Executable images do not use a string table and do not support section names longer than 8 characters. Long names in object files are truncated if they are emitted to an executable file.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageSectionHeader.VirtualSize">
            <summary>
            Gets or sets the total size of the section when loaded into memory. If this value is greater than <see cref="P:BytecodeApi.FileFormats.Coff.ImageSectionHeader.SizeOfRawData" />, the section is zero-padded. This property is valid only for executable images and should be set to zero for object files.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageSectionHeader.VirtualAddress">
            <summary>
            For executable images, Gets or sets the address of the first byte of the section relative to the image base when the section is loaded into memory. For object files, this property is the address of the first byte before relocation is applied; for simplicity, compilers should set this to zero. Otherwise, it is an arbitrary value that is subtracted from offsets during relocation.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageSectionHeader.SizeOfRawData">
            <summary>
            Gets or sets the size of the section (for object files) or the size of the initialized data on disk (for image files). For executable images, this must be a multiple of <see cref="P:BytecodeApi.FileFormats.Coff.ImageOptionalHeader.FileAlignment" /> from the optional header. If this is less than <see cref="P:BytecodeApi.FileFormats.Coff.ImageSectionHeader.VirtualSize" />, the remainder of the section is zero-filled. Because the <see cref="P:BytecodeApi.FileFormats.Coff.ImageSectionHeader.SizeOfRawData" /> property is rounded but the <see cref="P:BytecodeApi.FileFormats.Coff.ImageSectionHeader.VirtualSize" /> property is not, it is possible for <see cref="P:BytecodeApi.FileFormats.Coff.ImageSectionHeader.SizeOfRawData" /> to be greater than <see cref="P:BytecodeApi.FileFormats.Coff.ImageSectionHeader.VirtualSize" /> as well. When a section contains only uninitialized data, this property should be zero.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageSectionHeader.PointerToRawData">
            <summary>
            Gets or sets the file pointer to the first page of the section within the COFF file. For executable images, this must be a multiple of <see cref="P:BytecodeApi.FileFormats.Coff.ImageOptionalHeader.FileAlignment" /> from the optional header. For object files, the value should be aligned on a 4-byte boundary for best performance. When a section contains only uninitialized data, this property should be zero.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageSectionHeader.PointerToRelocations">
            <summary>
            Gets or sets the file pointer to the beginning of relocation entries for the section. This is set to zero for executable images or if there are no relocations.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageSectionHeader.PointerToLineNumbers">
            <summary>
            Gets or sets the file pointer to the beginning of line-number entries for the section. This is set to zero if there are no COFF line numbers. This value should be zero for an image because COFF debugging information is deprecated.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageSectionHeader.NumberOfRelocations">
            <summary>
            Gets or sets the number of relocation entries for the section. This is set to zero for executable images.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageSectionHeader.NumberOfLineNumbers">
            <summary>
            Gets or sets the number of line-number entries for the section. This value should be zero for an image because COFF debugging information is deprecated.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.ImageSectionHeader.Characteristics">
            <summary>
            Gets or sets the flags that describe the characteristics of the section.
            </summary>
        </member>
        <member name="M:BytecodeApi.FileFormats.Coff.ImageSectionHeader.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.FileFormats.Coff.ImageSectionHeader" /> class.
            </summary>
        </member>
        <member name="M:BytecodeApi.FileFormats.Coff.ImageSectionHeader.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:BytecodeApi.FileFormats.Coff.ImageSubsystem">
            <summary>
            Specifies the values for the <see cref="P:BytecodeApi.FileFormats.Coff.ImageOptionalHeader.Subsystem" /> property of the optional header of a PE image file.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageSubsystem.Unknown">
            <summary>
            Specifies an unknown subsystem.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageSubsystem.Native">
            <summary>
            Specifies device drivers and native Windows processes.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageSubsystem.WindowsGui">
            <summary>
            Specifies the Windows graphical user interface (GUI) subsystem.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageSubsystem.WindowsCui">
            <summary>
            Specifies the Windows character subsystem.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageSubsystem.OS2Cui">
            <summary>
            Specifies the OS/2 character subsystem.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageSubsystem.PosixCui">
            <summary>
            Specifies the Posix character subsystem.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageSubsystem.NativeWindows">
            <summary>
            Specifies a native Win9x driver.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageSubsystem.WindowsCEGui">
            <summary>
            Specifies Windows CE.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageSubsystem.EfiApplication">
            <summary>
            Specifies an Extensible Firmware Interface (EFI) application.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageSubsystem.EfiBootServiceDriver">
            <summary>
            Specifies an EFI driver with boot services.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageSubsystem.EfiRuntimeDriver">
            <summary>
            Specifies an EFI driver with run-time services.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageSubsystem.EfiRom">
            <summary>
            Specifies an EFI ROM image.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageSubsystem.XBox">
            <summary>
            Specifies XBOX.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Coff.ImageSubsystem.WindowsBootApplication">
            <summary>
            Specifies a Windows boot application.
            </summary>
        </member>
        <member name="T:BytecodeApi.FileFormats.Coff.PEImage">
            <summary>
            Represents a PE (x86) or a PE+ (x64) image. This class parses binary files, typically EXE and DLL files.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.PEImage.OriginalImage">
            <summary>
            Gets the original PE image file, if this file was loaded from an existing source; otherwise, <see langword="null" />.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.PEImage.DosHeader">
            <summary>
            Gets or sets the DOS header of this PE image file.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.PEImage.DosStub">
            <summary>
            Gets or sets the MS-DOS stub of this PE image file.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.PEImage.CoffHeader">
            <summary>
            Gets or sets the COFF header of this PE image file.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.PEImage.OptionalHeader">
            <summary>
            Gets or sets the optional header of this PE image file.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.PEImage.Sections">
            <summary>
            Gets or sets the collection of section headers and data of this PE image file.
            </summary>
        </member>
        <member name="M:BytecodeApi.FileFormats.Coff.PEImage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.FileFormats.Coff.PEImage" /> class.
            </summary>
        </member>
        <member name="M:BytecodeApi.FileFormats.Coff.PEImage.FromFile(System.String)">
            <summary>
            Creates a <see cref="T:BytecodeApi.FileFormats.Coff.PEImage" /> from the specified file with the specified form name.
            </summary>
            <param name="path">A <see cref="T:System.String" /> specifying the path of a file from which to create the <see cref="T:BytecodeApi.FileFormats.Coff.PEImage" />.</param>
            <returns>
            The <see cref="T:BytecodeApi.FileFormats.Coff.PEImage" /> this method creates.
            </returns>
        </member>
        <member name="M:BytecodeApi.FileFormats.Coff.PEImage.FromBinary(System.Byte[])">
            <summary>
            Creates a <see cref="T:BytecodeApi.FileFormats.Coff.PEImage" /> from the specified <see cref="T:System.Byte" />[] that represents a PE image file.
            </summary>
            <param name="file">The <see cref="T:System.Byte" />[] that represents a <see cref="T:BytecodeApi.FileFormats.Coff.PEImage" /> to parse.</param>
            <returns>
            The <see cref="T:BytecodeApi.FileFormats.Coff.PEImage" /> this method creates.
            </returns>
        </member>
        <member name="M:BytecodeApi.FileFormats.Coff.PEImage.ToBinary">
            <summary>
            Assembles this PE image file information into a binary file and returns the file as a <see cref="T:System.Byte" />[].
            </summary>
            <returns>
            A <see cref="T:System.Byte" />[] representing the assembly of this instance.
            </returns>
        </member>
        <member name="M:BytecodeApi.FileFormats.Coff.PEImage.Save(System.String)">
            <summary>
            Assembles this PE image file information into a binary file and writes the binary to a file.
            </summary>
            <param name="path">A <see cref="T:System.String" /> specifying the path of a file to which the binary is written to.</param>
        </member>
        <member name="M:BytecodeApi.FileFormats.Coff.PEImage.Save(System.IO.Stream)">
            <summary>
            Assembles this PE image file information into a binary file and writes the file into <paramref name="stream" />.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream" /> to which this PE image file is written to.</param>
        </member>
        <member name="T:BytecodeApi.FileFormats.Coff.PEImageParseException">
            <summary>
            The exception that is thrown when parsing of a <see cref="T:BytecodeApi.FileFormats.Coff.PEImage" /> fails.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Coff.PEImageParseException.Offset">
            <summary>
            Gets the offset within the image file at which parsing failed.
            </summary>
        </member>
        <member name="M:BytecodeApi.FileFormats.Coff.PEImageParseException.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.FileFormats.Coff.PEImageParseException" /> class.
            </summary>
            <param name="offset">The offset within the image file at which parsing failed.</param>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="T:BytecodeApi.FileFormats.Csv.CsvCell">
            <summary>
            Represents a cell in a <see cref="T:BytecodeApi.FileFormats.Csv.CsvRow" /> of a flat file database.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Csv.CsvCell.Value">
            <summary>
            Gets or sets the cell content of a flat file database.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Csv.CsvCell.Int32Value">
            <summary>
            Gets or sets the parsed <see cref="T:System.Int32" /> value of the <see cref="P:BytecodeApi.FileFormats.Csv.CsvCell.Value" /> property. If conversion fails, <see langword="null" /> is returned. Assigning a value sets the <see cref="P:BytecodeApi.FileFormats.Csv.CsvCell.Value" /> property by converting the value to a <see cref="T:System.String" />.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Csv.CsvCell.Int64Value">
            <summary>
            Gets or sets the parsed <see cref="T:System.Int64" /> value of the <see cref="P:BytecodeApi.FileFormats.Csv.CsvCell.Value" /> property. If conversion fails, <see langword="null" /> is returned. Assigning a value sets the <see cref="P:BytecodeApi.FileFormats.Csv.CsvCell.Value" /> property by converting the value to a <see cref="T:System.String" />.
            </summary>
        </member>
        <member name="M:BytecodeApi.FileFormats.Csv.CsvCell.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.FileFormats.Csv.CsvCell" /> struct with the specified value.
            </summary>
            <param name="value">The <see cref="T:System.String" /> value of this cell.</param>
        </member>
        <member name="M:BytecodeApi.FileFormats.Csv.CsvCell.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> whose value was parsed from the flat file database.
            </summary>
            <returns>
            A <see cref="T:System.String" /> whose value was parsed from the flat file database.
            </returns>
        </member>
        <member name="M:BytecodeApi.FileFormats.Csv.CsvCell.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
            <see langword="true" />, if the specified <see cref="T:System.Object" /> is equal to this instance;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.FileFormats.Csv.CsvCell.Equals(BytecodeApi.FileFormats.Csv.CsvCell)">
            <summary>
            Determines whether this instance is equal to another <see cref="T:BytecodeApi.FileFormats.Csv.CsvCell" />.
            </summary>
            <param name="other">The <see cref="T:BytecodeApi.FileFormats.Csv.CsvCell" /> to compare to this instance.</param>
            <returns>
            <see langword="true" />, if this instance is equal to the <paramref name="other" /> parameter;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.FileFormats.Csv.CsvCell.GetHashCode">
            <summary>
            Returns a hash code for this <see cref="T:BytecodeApi.FileFormats.Csv.CsvCell" />.
            </summary>
            <returns>
            The hash code for this <see cref="T:BytecodeApi.FileFormats.Csv.CsvCell" /> instance.
            </returns>
        </member>
        <member name="M:BytecodeApi.FileFormats.Csv.CsvCell.op_Equality(BytecodeApi.FileFormats.Csv.CsvCell,BytecodeApi.FileFormats.Csv.CsvCell)">
            <summary>
            Compares two <see cref="T:BytecodeApi.FileFormats.Csv.CsvCell" /> instances for equality.
            </summary>
            <param name="a">The first <see cref="T:BytecodeApi.FileFormats.Csv.CsvCell" /> to compare.</param>
            <param name="b">The second <see cref="T:BytecodeApi.FileFormats.Csv.CsvCell" /> to compare.</param>
            <returns>
            <see langword="true" />, if both <see cref="T:BytecodeApi.FileFormats.Csv.CsvCell" /> are equal;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.FileFormats.Csv.CsvCell.op_Inequality(BytecodeApi.FileFormats.Csv.CsvCell,BytecodeApi.FileFormats.Csv.CsvCell)">
            <summary>
            Compares two <see cref="T:BytecodeApi.FileFormats.Csv.CsvCell" /> instances for inequality.
            </summary>
            <param name="a">The first <see cref="T:BytecodeApi.FileFormats.Csv.CsvCell" /> to compare.</param>
            <param name="b">The second <see cref="T:BytecodeApi.FileFormats.Csv.CsvCell" /> to compare.</param>
            <returns>
            <see langword="true" />, if both <see cref="T:BytecodeApi.FileFormats.Csv.CsvCell" /> are not equal;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.FileFormats.Csv.CsvFile">
            <summary>
            Represents a flat file database, typically a CSV file with lines separated by a separator.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Csv.CsvFile.Headers">
            <summary>
            Gets or sets a <see cref="T:System.String" />[] that contains the headers of this flat file database or <see langword="null" />, if the hasHeaderRow parameter was set to <see langword="false" />.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Csv.CsvFile.Delimiter">
            <summary>
            Gets or sets the delimiter for this <see cref="T:BytecodeApi.FileFormats.Csv.CsvFile" />. The initial value is set to the specified or detected delimiter when loading a flat file database, or <see langword="null" />, if the constructor was used to create an empty <see cref="T:BytecodeApi.FileFormats.Csv.CsvFile" />. This property is used by the <see cref="M:BytecodeApi.FileFormats.Csv.CsvFile.Save(System.IO.Stream,System.Boolean,System.Boolean,System.Text.Encoding,System.Boolean)" /> method.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Csv.CsvFile.Rows">
            <summary>
            Gets a collection of <see cref="T:BytecodeApi.FileFormats.Csv.CsvRow" /> objects that represents the content of this flat file database.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Csv.CsvFile.HasErrors">
            <summary>
            Gets a <see cref="T:System.Boolean" /> value indicating whether this <see cref="T:BytecodeApi.FileFormats.Csv.CsvFile" /> contains rows that could not be parsed. This property does not change once the file is loaded.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Csv.CsvFile.IsColumnCountConsistent">
            <summary>
            Gets a <see cref="T:System.Boolean" /> value indicating whether all rows in this <see cref="T:BytecodeApi.FileFormats.Csv.CsvFile" /> have the same amount of columns, excluding the <see cref="P:BytecodeApi.FileFormats.Csv.CsvFile.Headers" /> property and error lines. If zero rows or only error rows were loaded, this property returns <see langword="true" />. This property does not change once the file is loaded.
            </summary>
        </member>
        <member name="M:BytecodeApi.FileFormats.Csv.CsvFile.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.FileFormats.Csv.CsvFile" /> class.
            </summary>
        </member>
        <member name="M:BytecodeApi.FileFormats.Csv.CsvFile.FromFile(System.String,System.String,System.Boolean)">
            <summary>
            Creates a <see cref="T:BytecodeApi.FileFormats.Csv.CsvFile" /> object from the specified file.
            </summary>
            <param name="path">A <see cref="T:System.String" /> representing the path to a flat file database, such as a CSV file.</param>
            <param name="delimiter">A <see cref="T:System.String" /> specifying the delimiter to be used during flat file parsing. If <see langword="null" /> is provided, the delimiter is automatically detected. If automatic detection fails, an exception is thrown.</param>
            <param name="hasHeaderRow"><see langword="true" /> to treat the first row as a header row and load its contents into the <see cref="P:BytecodeApi.FileFormats.Csv.CsvFile.Headers" /> property.</param>
            <returns>
            The <see cref="T:BytecodeApi.FileFormats.Csv.CsvFile" /> this method creates.
            </returns>
        </member>
        <member name="M:BytecodeApi.FileFormats.Csv.CsvFile.FromFile(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a <see cref="T:BytecodeApi.FileFormats.Csv.CsvFile" /> object from the specified file.
            </summary>
            <param name="path">A <see cref="T:System.String" /> representing the path to a flat file database, such as a CSV file.</param>
            <param name="delimiter">A <see cref="T:System.String" /> specifying the delimiter to be used during flat file parsing. If <see langword="null" /> is provided, the delimiter is automatically detected. If automatic detection fails, an exception is thrown.</param>
            <param name="hasHeaderRow"><see langword="true" /> to treat the first row as a header row and load its contents into the <see cref="P:BytecodeApi.FileFormats.Csv.CsvFile.Headers" /> property.</param>
            <param name="ignoreEmptyLines"><see langword="true" /> to ignore empty lines and lines where all columns are empty.</param>
            <returns>
            The <see cref="T:BytecodeApi.FileFormats.Csv.CsvFile" /> this method creates.
            </returns>
        </member>
        <member name="M:BytecodeApi.FileFormats.Csv.CsvFile.FromFile(System.String,System.String,System.Boolean,System.Boolean,System.Text.Encoding)">
            <summary>
            Creates a <see cref="T:BytecodeApi.FileFormats.Csv.CsvFile" /> object from the specified file.
            </summary>
            <param name="path">A <see cref="T:System.String" /> representing the path to a flat file database, such as a CSV file.</param>
            <param name="delimiter">A <see cref="T:System.String" /> specifying the delimiter to be used during flat file parsing. If <see langword="null" /> is provided, the delimiter is automatically detected. If automatic detection fails, an exception is thrown.</param>
            <param name="hasHeaderRow"><see langword="true" /> to treat the first row as a header row and load its contents into the <see cref="P:BytecodeApi.FileFormats.Csv.CsvFile.Headers" /> property.</param>
            <param name="ignoreEmptyLines"><see langword="true" /> to ignore empty lines and lines where all columns are empty.</param>
            <param name="encoding">The encoding to use if encoding is not determined from the file. Specify <see langword="null" /> to detect encoding automatically or provide a value to explicitly parse with a specific <see cref="T:System.Text.Encoding" />.</param>
            <returns>
            The <see cref="T:BytecodeApi.FileFormats.Csv.CsvFile" /> this method creates.
            </returns>
        </member>
        <member name="M:BytecodeApi.FileFormats.Csv.CsvFile.FromBinary(System.Byte[],System.String,System.Boolean)">
            <summary>
            Creates a <see cref="T:BytecodeApi.FileFormats.Csv.CsvFile" /> object from the specified <see cref="T:System.Byte" />[] that represents a flat file database.
            </summary>
            <param name="file">The <see cref="T:System.Byte" />[] that represents a flat file database to read from.</param>
            <param name="delimiter">A <see cref="T:System.String" /> specifying the delimiter to be used during flat file parsing. If <see langword="null" /> is provided, the delimiter is automatically detected. If automatic detection fails, an exception is thrown.</param>
            <param name="hasHeaderRow"><see langword="true" /> to treat the first row as a header row and load its contents into the <see cref="P:BytecodeApi.FileFormats.Csv.CsvFile.Headers" /> property.</param>
            <returns>
            The <see cref="T:BytecodeApi.FileFormats.Csv.CsvFile" /> this method creates.
            </returns>
        </member>
        <member name="M:BytecodeApi.FileFormats.Csv.CsvFile.FromBinary(System.Byte[],System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a <see cref="T:BytecodeApi.FileFormats.Csv.CsvFile" /> object from the specified <see cref="T:System.Byte" />[] that represents a flat file database.
            </summary>
            <param name="file">The <see cref="T:System.Byte" />[] that represents a flat file database to read from.</param>
            <param name="delimiter">A <see cref="T:System.String" /> specifying the delimiter to be used during flat file parsing. If <see langword="null" /> is provided, the delimiter is automatically detected. If automatic detection fails, an exception is thrown.</param>
            <param name="hasHeaderRow"><see langword="true" /> to treat the first row as a header row and load its contents into the <see cref="P:BytecodeApi.FileFormats.Csv.CsvFile.Headers" /> property.</param>
            <param name="ignoreEmptyLines"><see langword="true" /> to ignore empty lines and lines where all columns are empty.</param>
            <returns>
            The <see cref="T:BytecodeApi.FileFormats.Csv.CsvFile" /> this method creates.
            </returns>
        </member>
        <member name="M:BytecodeApi.FileFormats.Csv.CsvFile.FromBinary(System.Byte[],System.String,System.Boolean,System.Boolean,System.Text.Encoding)">
            <summary>
            Creates a <see cref="T:BytecodeApi.FileFormats.Csv.CsvFile" /> object from the specified <see cref="T:System.Byte" />[] that represents a flat file database.
            </summary>
            <param name="file">The <see cref="T:System.Byte" />[] that represents a flat file database to read from.</param>
            <param name="delimiter">A <see cref="T:System.String" /> specifying the delimiter to be used during flat file parsing. If <see langword="null" /> is provided, the delimiter is automatically detected. If automatic detection fails, an exception is thrown.</param>
            <param name="hasHeaderRow"><see langword="true" /> to treat the first row as a header row and load its contents into the <see cref="P:BytecodeApi.FileFormats.Csv.CsvFile.Headers" /> property.</param>
            <param name="ignoreEmptyLines"><see langword="true" /> to ignore empty lines and lines where all columns are empty.</param>
            <param name="encoding">The encoding to use if encoding is not determined from the file. Specify <see langword="null" /> to detect encoding automatically or provide a value to explicitly parse with a specific <see cref="T:System.Text.Encoding" />.</param>
            <returns>
            The <see cref="T:BytecodeApi.FileFormats.Csv.CsvFile" /> this method creates.
            </returns>
        </member>
        <member name="M:BytecodeApi.FileFormats.Csv.CsvFile.FromStream(System.IO.Stream,System.String,System.Boolean)">
            <summary>
            Creates a <see cref="T:BytecodeApi.FileFormats.Csv.CsvFile" /> object from the specified <see cref="T:System.IO.Stream" />.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream" /> from which to read the flat file database from.</param>
            <param name="delimiter">A <see cref="T:System.String" /> specifying the delimiter to be used during flat file parsing. If <see langword="null" /> is provided, the delimiter is automatically detected. If automatic detection fails, an exception is thrown.</param>
            <param name="hasHeaderRow"><see langword="true" /> to treat the first row as a header row and load its contents into the <see cref="P:BytecodeApi.FileFormats.Csv.CsvFile.Headers" /> property.</param>
            <returns>
            The <see cref="T:BytecodeApi.FileFormats.Csv.CsvFile" /> this method creates.
            </returns>
        </member>
        <member name="M:BytecodeApi.FileFormats.Csv.CsvFile.FromStream(System.IO.Stream,System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a <see cref="T:BytecodeApi.FileFormats.Csv.CsvFile" /> object from the specified <see cref="T:System.IO.Stream" />.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream" /> from which to read the flat file database from.</param>
            <param name="delimiter">A <see cref="T:System.String" /> specifying the delimiter to be used during flat file parsing. If <see langword="null" /> is provided, the delimiter is automatically detected. If automatic detection fails, an exception is thrown.</param>
            <param name="hasHeaderRow"><see langword="true" /> to treat the first row as a header row and load its contents into the <see cref="P:BytecodeApi.FileFormats.Csv.CsvFile.Headers" /> property.</param>
            <param name="ignoreEmptyLines"><see langword="true" /> to ignore empty lines and lines where all columns are empty.</param>
            <returns>
            The <see cref="T:BytecodeApi.FileFormats.Csv.CsvFile" /> this method creates.
            </returns>
        </member>
        <member name="M:BytecodeApi.FileFormats.Csv.CsvFile.FromStream(System.IO.Stream,System.String,System.Boolean,System.Boolean,System.Text.Encoding)">
            <summary>
            Creates a <see cref="T:BytecodeApi.FileFormats.Csv.CsvFile" /> object from the specified <see cref="T:System.IO.Stream" />.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream" /> from which to read the flat file database from.</param>
            <param name="delimiter">A <see cref="T:System.String" /> specifying the delimiter to be used during flat file parsing. If <see langword="null" /> is provided, the delimiter is automatically detected. If automatic detection fails, an exception is thrown.</param>
            <param name="hasHeaderRow"><see langword="true" /> to treat the first row as a header row and load its contents into the <see cref="P:BytecodeApi.FileFormats.Csv.CsvFile.Headers" /> property.</param>
            <param name="ignoreEmptyLines"><see langword="true" /> to ignore empty lines and lines where all columns are empty.</param>
            <param name="encoding">The encoding to use if encoding is not determined from the file. Specify <see langword="null" /> to detect encoding automatically or provide a value to explicitly parse with a specific <see cref="T:System.Text.Encoding" />.</param>
            <returns>
            The <see cref="T:BytecodeApi.FileFormats.Csv.CsvFile" /> this method creates.
            </returns>
        </member>
        <member name="M:BytecodeApi.FileFormats.Csv.CsvFile.FromStream(System.IO.Stream,System.String,System.Boolean,System.Boolean,System.Text.Encoding,System.Boolean)">
            <summary>
            Creates a <see cref="T:BytecodeApi.FileFormats.Csv.CsvFile" /> object from the specified <see cref="T:System.IO.Stream" />.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream" /> from which to read the flat file database from.</param>
            <param name="delimiter">A <see cref="T:System.String" /> specifying the delimiter to be used during flat file parsing. If <see langword="null" /> is provided, the delimiter is automatically detected. If automatic detection fails, an exception is thrown.</param>
            <param name="hasHeaderRow"><see langword="true" /> to treat the first row as a header row and load its contents into the <see cref="P:BytecodeApi.FileFormats.Csv.CsvFile.Headers" /> property.</param>
            <param name="ignoreEmptyLines"><see langword="true" /> to ignore empty lines and lines where all columns are empty.</param>
            <param name="encoding">The encoding to use if encoding is not determined from the file. Specify <see langword="null" /> to detect encoding automatically or provide a value to explicitly parse with a specific <see cref="T:System.Text.Encoding" />.</param>
            <param name="leaveOpen">A <see cref="T:System.Boolean" /> value indicating whether to leave <paramref name="stream" /> open.</param>
            <returns>
            The <see cref="T:BytecodeApi.FileFormats.Csv.CsvFile" /> this method creates.
            </returns>
        </member>
        <member name="M:BytecodeApi.FileFormats.Csv.CsvFile.EnumerateFile(System.String,System.String,System.Boolean)">
            <summary>
            Returns an enumerable collection of <see cref="T:BytecodeApi.FileFormats.Csv.CsvRow" /> objects from the specified file. This method streams the file and does not load it into memory and is typically used for large files that are processed in a <see langword="foreach" /> loop.
            </summary>
            <param name="path">A <see cref="T:System.String" /> representing the path to a flat file database, such as a CSV file.</param>
            <param name="delimiter">A <see cref="T:System.String" /> specifying the delimiter to be used during flat file parsing. If <see langword="null" /> is provided, the delimiter is automatically detected. If automatic detection fails, an exception is thrown.</param>
            <param name="hasHeaderRow"><see langword="true" /> to treat the first row as a header row and load its contents into the <see cref="P:BytecodeApi.FileFormats.Csv.CsvFile.Headers" /> property.</param>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1" /> with the <see cref="T:BytecodeApi.FileFormats.Csv.CsvRow" /> objects from the specified file.
            </returns>
        </member>
        <member name="M:BytecodeApi.FileFormats.Csv.CsvFile.EnumerateFile(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Returns an enumerable collection of <see cref="T:BytecodeApi.FileFormats.Csv.CsvRow" /> objects from the specified file. This method streams the file and does not load it into memory and is typically used for large files that are processed in a <see langword="foreach" /> loop.
            </summary>
            <param name="path">A <see cref="T:System.String" /> representing the path to a flat file database, such as a CSV file.</param>
            <param name="delimiter">A <see cref="T:System.String" /> specifying the delimiter to be used during flat file parsing. If <see langword="null" /> is provided, the delimiter is automatically detected. If automatic detection fails, an exception is thrown.</param>
            <param name="hasHeaderRow"><see langword="true" /> to treat the first row as a header row and load its contents into the <see cref="P:BytecodeApi.FileFormats.Csv.CsvFile.Headers" /> property.</param>
            <param name="ignoreEmptyLines"><see langword="true" /> to ignore empty lines and lines where all columns are empty.</param>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1" /> with the <see cref="T:BytecodeApi.FileFormats.Csv.CsvRow" /> objects from the specified file.
            </returns>
        </member>
        <member name="M:BytecodeApi.FileFormats.Csv.CsvFile.EnumerateFile(System.String,System.String,System.Boolean,System.Boolean,System.Text.Encoding)">
            <summary>
            Returns an enumerable collection of <see cref="T:BytecodeApi.FileFormats.Csv.CsvRow" /> objects from the specified file. This method streams the file and does not load it into memory and is typically used for large files that are processed in a <see langword="foreach" /> loop.
            </summary>
            <param name="path">A <see cref="T:System.String" /> representing the path to a flat file database, such as a CSV file.</param>
            <param name="delimiter">A <see cref="T:System.String" /> specifying the delimiter to be used during flat file parsing. If <see langword="null" /> is provided, the delimiter is automatically detected. If automatic detection fails, an exception is thrown.</param>
            <param name="hasHeaderRow"><see langword="true" /> to treat the first row as a header row and load its contents into the <see cref="P:BytecodeApi.FileFormats.Csv.CsvFile.Headers" /> property.</param>
            <param name="ignoreEmptyLines"><see langword="true" /> to ignore empty lines and lines where all columns are empty.</param>
            <param name="encoding">The encoding to use if encoding is not determined from the file. Specify <see langword="null" /> to detect encoding automatically or provide a value to explicitly parse with a specific <see cref="T:System.Text.Encoding" />.</param>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1" /> with the <see cref="T:BytecodeApi.FileFormats.Csv.CsvRow" /> objects from the specified file.
            </returns>
        </member>
        <member name="M:BytecodeApi.FileFormats.Csv.CsvFile.EnumerateBinary(System.Byte[],System.String,System.Boolean)">
            <summary>
            Returns an enumerable collection of <see cref="T:BytecodeApi.FileFormats.Csv.CsvRow" /> objects from the specified <see cref="T:System.Byte" />[] that represents a flat file database. This method streams the file and does not load it into memory and is typically used for large files that are processed in a <see langword="foreach" /> loop.
            </summary>
            <param name="file">The <see cref="T:System.Byte" />[] that represents a flat file database to read from.</param>
            <param name="delimiter">A <see cref="T:System.String" /> specifying the delimiter to be used during flat file parsing. If <see langword="null" /> is provided, the delimiter is automatically detected. If automatic detection fails, an exception is thrown.</param>
            <param name="hasHeaderRow"><see langword="true" /> to treat the first row as a header row and load its contents into the <see cref="P:BytecodeApi.FileFormats.Csv.CsvFile.Headers" /> property.</param>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1" /> with the <see cref="T:BytecodeApi.FileFormats.Csv.CsvRow" /> objects from the specified file.
            </returns>
        </member>
        <member name="M:BytecodeApi.FileFormats.Csv.CsvFile.EnumerateBinary(System.Byte[],System.String,System.Boolean,System.Boolean)">
            <summary>
            Returns an enumerable collection of <see cref="T:BytecodeApi.FileFormats.Csv.CsvRow" /> objects from the specified <see cref="T:System.Byte" />[] that represents a flat file database. This method streams the file and does not load it into memory and is typically used for large files that are processed in a <see langword="foreach" /> loop.
            </summary>
            <param name="file">The <see cref="T:System.Byte" />[] that represents a flat file database to read from.</param>
            <param name="delimiter">A <see cref="T:System.String" /> specifying the delimiter to be used during flat file parsing. If <see langword="null" /> is provided, the delimiter is automatically detected. If automatic detection fails, an exception is thrown.</param>
            <param name="hasHeaderRow"><see langword="true" /> to treat the first row as a header row and load its contents into the <see cref="P:BytecodeApi.FileFormats.Csv.CsvFile.Headers" /> property.</param>
            <param name="ignoreEmptyLines"><see langword="true" /> to ignore empty lines and lines where all columns are empty.</param>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1" /> with the <see cref="T:BytecodeApi.FileFormats.Csv.CsvRow" /> objects from the specified file.
            </returns>
        </member>
        <member name="M:BytecodeApi.FileFormats.Csv.CsvFile.EnumerateBinary(System.Byte[],System.String,System.Boolean,System.Boolean,System.Text.Encoding)">
            <summary>
            Returns an enumerable collection of <see cref="T:BytecodeApi.FileFormats.Csv.CsvRow" /> objects from the specified <see cref="T:System.Byte" />[] that represents a flat file database. This method streams the file and does not load it into memory and is typically used for large files that are processed in a <see langword="foreach" /> loop.
            </summary>
            <param name="file">The <see cref="T:System.Byte" />[] that represents a flat file database to read from.</param>
            <param name="delimiter">A <see cref="T:System.String" /> specifying the delimiter to be used during flat file parsing. If <see langword="null" /> is provided, the delimiter is automatically detected. If automatic detection fails, an exception is thrown.</param>
            <param name="hasHeaderRow"><see langword="true" /> to treat the first row as a header row and load its contents into the <see cref="P:BytecodeApi.FileFormats.Csv.CsvFile.Headers" /> property.</param>
            <param name="ignoreEmptyLines"><see langword="true" /> to ignore empty lines and lines where all columns are empty.</param>
            <param name="encoding">The encoding to use if encoding is not determined from the file. Specify <see langword="null" /> to detect encoding automatically or provide a value to explicitly parse with a specific <see cref="T:System.Text.Encoding" />.</param>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1" /> with the <see cref="T:BytecodeApi.FileFormats.Csv.CsvRow" /> objects from the specified file.
            </returns>
        </member>
        <member name="M:BytecodeApi.FileFormats.Csv.CsvFile.EnumerateStream(System.IO.Stream,System.String,System.Boolean)">
            <summary>
            Returns an enumerable collection of <see cref="T:BytecodeApi.FileFormats.Csv.CsvRow" /> objects from the specified <see cref="T:System.IO.Stream" />. This method streams the file and does not load it into memory and is typically used for large files that are processed in a <see langword="foreach" /> loop.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream" /> from which to read the flat file database from.</param>
            <param name="delimiter">A <see cref="T:System.String" /> specifying the delimiter to be used during flat file parsing. If <see langword="null" /> is provided, the delimiter is automatically detected. If automatic detection fails, an exception is thrown.</param>
            <param name="hasHeaderRow"><see langword="true" /> to treat the first row as a header row and load its contents into the <see cref="P:BytecodeApi.FileFormats.Csv.CsvFile.Headers" /> property.</param>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1" /> with the <see cref="T:BytecodeApi.FileFormats.Csv.CsvRow" /> objects from the specified file.
            </returns>
        </member>
        <member name="M:BytecodeApi.FileFormats.Csv.CsvFile.EnumerateStream(System.IO.Stream,System.String,System.Boolean,System.Boolean)">
            <summary>
            Returns an enumerable collection of <see cref="T:BytecodeApi.FileFormats.Csv.CsvRow" /> objects from the specified <see cref="T:System.IO.Stream" />. This method streams the file and does not load it into memory and is typically used for large files that are processed in a <see langword="foreach" /> loop.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream" /> from which to read the flat file database from.</param>
            <param name="delimiter">A <see cref="T:System.String" /> specifying the delimiter to be used during flat file parsing. If <see langword="null" /> is provided, the delimiter is automatically detected. If automatic detection fails, an exception is thrown.</param>
            <param name="hasHeaderRow"><see langword="true" /> to treat the first row as a header row and load its contents into the <see cref="P:BytecodeApi.FileFormats.Csv.CsvFile.Headers" /> property.</param>
            <param name="ignoreEmptyLines"><see langword="true" /> to ignore empty lines and lines where all columns are empty.</param>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1" /> with the <see cref="T:BytecodeApi.FileFormats.Csv.CsvRow" /> objects from the specified file.
            </returns>
        </member>
        <member name="M:BytecodeApi.FileFormats.Csv.CsvFile.EnumerateStream(System.IO.Stream,System.String,System.Boolean,System.Boolean,System.Text.Encoding)">
            <summary>
            Returns an enumerable collection of <see cref="T:BytecodeApi.FileFormats.Csv.CsvRow" /> objects from the specified <see cref="T:System.IO.Stream" />. This method streams the file and does not load it into memory and is typically used for large files that are processed in a <see langword="foreach" /> loop.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream" /> from which to read the flat file database from.</param>
            <param name="delimiter">A <see cref="T:System.String" /> specifying the delimiter to be used during flat file parsing. If <see langword="null" /> is provided, the delimiter is automatically detected. If automatic detection fails, an exception is thrown.</param>
            <param name="hasHeaderRow"><see langword="true" /> to treat the first row as a header row and load its contents into the <see cref="P:BytecodeApi.FileFormats.Csv.CsvFile.Headers" /> property.</param>
            <param name="ignoreEmptyLines"><see langword="true" /> to ignore empty lines and lines where all columns are empty.</param>
            <param name="encoding">The encoding to use if encoding is not determined from the file. Specify <see langword="null" /> to detect encoding automatically or provide a value to explicitly parse with a specific <see cref="T:System.Text.Encoding" />.</param>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1" /> with the <see cref="T:BytecodeApi.FileFormats.Csv.CsvRow" /> objects from the specified file.
            </returns>
        </member>
        <member name="M:BytecodeApi.FileFormats.Csv.CsvFile.EnumerateStream(System.IO.Stream,System.String,System.Boolean,System.Boolean,System.Text.Encoding,System.Boolean)">
            <summary>
            Returns an enumerable collection of <see cref="T:BytecodeApi.FileFormats.Csv.CsvRow" /> objects from the specified <see cref="T:System.IO.Stream" />. This method streams the file and does not load it into memory and is typically used for large files that are processed in a <see langword="foreach" /> loop.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream" /> from which to read the flat file database from.</param>
            <param name="delimiter">A <see cref="T:System.String" /> specifying the delimiter to be used during flat file parsing. If <see langword="null" /> is provided, the delimiter is automatically detected. If automatic detection fails, an exception is thrown.</param>
            <param name="hasHeaderRow"><see langword="true" /> to treat the first row as a header row and load its contents into the <see cref="P:BytecodeApi.FileFormats.Csv.CsvFile.Headers" /> property.</param>
            <param name="ignoreEmptyLines"><see langword="true" /> to ignore empty lines and lines where all columns are empty.</param>
            <param name="encoding">The encoding to use if encoding is not determined from the file. Specify <see langword="null" /> to detect encoding automatically or provide a value to explicitly parse with a specific <see cref="T:System.Text.Encoding" />.</param>
            <param name="leaveOpen">A <see cref="T:System.Boolean" /> value indicating whether to leave <paramref name="stream" /> open.</param>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1" /> with the <see cref="T:BytecodeApi.FileFormats.Csv.CsvRow" /> objects from the specified file.
            </returns>
        </member>
        <member name="M:BytecodeApi.FileFormats.Csv.CsvFile.DetectDelimiter(System.String)">
            <summary>
            Tries to detect the delimiter of a CSV file and returns a <see cref="T:System.String" /> indicating the delimiter, or <see langword="null" />, if it could not be detected.
            For detection, a specified number of rows is tested for various delimiters. By default, a minimum of 2 rows is required and up to 10 rows are tested. The tested delimiters are ",", ";", "\t" and "|". If all rows have the same column count and the column count is greater than 1, the tested delimiter is considered correct.
            </summary>
            <param name="path">A <see cref="T:System.String" /> representing the path to a flat file database, such as a CSV file.</param>
            <returns>
            The detected delimiter, or <see langword="null" />, if no definite delimiter was detected.
            </returns>
        </member>
        <member name="M:BytecodeApi.FileFormats.Csv.CsvFile.DetectDelimiter(System.String,System.Text.Encoding)">
            <summary>
            Tries to detect the delimiter of a CSV file and returns a <see cref="T:System.String" /> indicating the delimiter, or <see langword="null" />, if it could not be detected.
            For detection, a specified number of rows is tested for various delimiters. By default, a minimum of 2 rows is required and up to 10 rows are tested. The tested delimiters are ",", ";", "\t" and "|". If all rows have the same column count and the column count is greater than 1, the tested delimiter is considered correct.
            </summary>
            <param name="path">A <see cref="T:System.String" /> representing the path to a flat file database, such as a CSV file.</param>
            <param name="encoding">The encoding to use if encoding is not determined from the file. Specify <see langword="null" /> to detect encoding automatically or provide a value to explicitly parse with a specific <see cref="T:System.Text.Encoding" />.</param>
            <returns>
            The detected delimiter, or <see langword="null" />, if no definite delimiter was detected.
            </returns>
        </member>
        <member name="M:BytecodeApi.FileFormats.Csv.CsvFile.DetectDelimiter(System.String,System.Text.Encoding,System.Int32,System.Int32,System.String[])">
            <summary>
            Tries to detect the delimiter of a CSV file and returns a <see cref="T:System.String" /> indicating the delimiter, or <see langword="null" />, if it could not be detected.
            For detection, a specified number of rows is tested for various delimiters. By default, a minimum of 2 rows is required and up to 10 rows are tested. The tested delimiters are ",", ";", "\t" and "|". If all rows have the same column count and the column count is greater than 1, the tested delimiter is considered correct.
            </summary>
            <param name="path">A <see cref="T:System.String" /> representing the path to a flat file database, such as a CSV file.</param>
            <param name="encoding">The encoding to use if encoding is not determined from the file. Specify <see langword="null" /> to detect encoding automatically or provide a value to explicitly parse with a specific <see cref="T:System.Text.Encoding" />.</param>
            <param name="minimumRowsToTest">A <see cref="T:System.Int32" /> value specifying the minimum number of rows that the CSV file must have. The default value is 2.</param>
            <param name="maximumRowsToTest">A <see cref="T:System.Int32" /> value specifying the maximum number of rows that will be tested. If the file has less rows, the complete file is tested. The default value is 10.</param>
            <param name="delimitersToTest">A <see cref="T:System.String" />[] specifying the delimiters to test for in the specified order. By default, ",", ";", "\t" and "|" are tested.</param>
            <returns>
            The detected delimiter, or <see langword="null" />, if no definite delimiter was detected.
            </returns>
        </member>
        <member name="M:BytecodeApi.FileFormats.Csv.CsvFile.DetectDelimiter(System.Byte[])">
            <summary>
            Tries to detect the delimiter of a CSV file and returns a <see cref="T:System.String" /> indicating the delimiter, or <see langword="null" />, if it could not be detected.
            For detection, a specified number of rows is tested for various delimiters. By default, a minimum of 2 rows is required and up to 10 rows are tested. The tested delimiters are ",", ";", "\t" and "|". If all rows have the same column count and the column count is greater than 1, the tested delimiter is considered correct.
            </summary>
            <param name="file">The <see cref="T:System.Byte" />[] that represents a flat file database to read from.</param>
            <returns>
            The detected delimiter, or <see langword="null" />, if no definite delimiter was detected.
            </returns>
        </member>
        <member name="M:BytecodeApi.FileFormats.Csv.CsvFile.DetectDelimiter(System.Byte[],System.Text.Encoding)">
            <summary>
            Tries to detect the delimiter of a CSV file and returns a <see cref="T:System.String" /> indicating the delimiter, or <see langword="null" />, if it could not be detected.
            For detection, a specified number of rows is tested for various delimiters. By default, a minimum of 2 rows is required and up to 10 rows are tested. The tested delimiters are ",", ";", "\t" and "|". If all rows have the same column count and the column count is greater than 1, the tested delimiter is considered correct.
            </summary>
            <param name="file">The <see cref="T:System.Byte" />[] that represents a flat file database to read from.</param>
            <param name="encoding">The encoding to use if encoding is not determined from the file. Specify <see langword="null" /> to detect encoding automatically or provide a value to explicitly parse with a specific <see cref="T:System.Text.Encoding" />.</param>
            <returns>
            The detected delimiter, or <see langword="null" />, if no definite delimiter was detected.
            </returns>
        </member>
        <member name="M:BytecodeApi.FileFormats.Csv.CsvFile.DetectDelimiter(System.Byte[],System.Text.Encoding,System.Int32,System.Int32,System.String[])">
            <summary>
            Tries to detect the delimiter of a CSV file and returns a <see cref="T:System.String" /> indicating the delimiter, or <see langword="null" />, if it could not be detected.
            For detection, a specified number of rows is tested for various delimiters. By default, a minimum of 2 rows is required and up to 10 rows are tested. The tested delimiters are ",", ";", "\t" and "|". If all rows have the same column count and the column count is greater than 1, the tested delimiter is considered correct.
            </summary>
            <param name="file">The <see cref="T:System.Byte" />[] that represents a flat file database to read from.</param>
            <param name="encoding">The encoding to use if encoding is not determined from the file. Specify <see langword="null" /> to detect encoding automatically or provide a value to explicitly parse with a specific <see cref="T:System.Text.Encoding" />.</param>
            <param name="minimumRowsToTest">A <see cref="T:System.Int32" /> value specifying the minimum number of rows that the CSV file must have. The default value is 2.</param>
            <param name="maximumRowsToTest">A <see cref="T:System.Int32" /> value specifying the maximum number of rows that will be tested. If the file has less rows, the complete file is tested. The default value is 10.</param>
            <param name="delimitersToTest">A <see cref="T:System.String" />[] specifying the delimiters to test for in the specified order. By default, ",", ";", "\t" and "|" are tested.</param>
            <returns>
            The detected delimiter, or <see langword="null" />, if no definite delimiter was detected.
            </returns>
        </member>
        <member name="M:BytecodeApi.FileFormats.Csv.CsvFile.DetectDelimiter(System.IO.Stream)">
            <summary>
            Tries to detect the delimiter of a CSV file and returns a <see cref="T:System.String" /> indicating the delimiter, or <see langword="null" />, if it could not be detected.
            For detection, a specified number of rows is tested for various delimiters. By default, a minimum of 2 rows is required and up to 10 rows are tested. The tested delimiters are ",", ";", "\t" and "|". If all rows have the same column count and the column count is greater than 1, the tested delimiter is considered correct.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream" /> from which to read the flat file database from. The <see cref="T:System.IO.Stream" /> is read multiple times and the position is reset before this method returns.</param>
            <returns>
            The detected delimiter, or <see langword="null" />, if no definite delimiter was detected.
            </returns>
        </member>
        <member name="M:BytecodeApi.FileFormats.Csv.CsvFile.DetectDelimiter(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Tries to detect the delimiter of a CSV file and returns a <see cref="T:System.String" /> indicating the delimiter, or <see langword="null" />, if it could not be detected.
            For detection, a specified number of rows is tested for various delimiters. By default, a minimum of 2 rows is required and up to 10 rows are tested. The tested delimiters are ",", ";", "\t" and "|". If all rows have the same column count and the column count is greater than 1, the tested delimiter is considered correct.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream" /> from which to read the flat file database from. The <see cref="T:System.IO.Stream" /> is read multiple times and the position is reset before this method returns.</param>
            <param name="encoding">The encoding to use if encoding is not determined from the file. Specify <see langword="null" /> to detect encoding automatically or provide a value to explicitly parse with a specific <see cref="T:System.Text.Encoding" />.</param>
            <returns>
            The detected delimiter, or <see langword="null" />, if no definite delimiter was detected.
            </returns>
        </member>
        <member name="M:BytecodeApi.FileFormats.Csv.CsvFile.DetectDelimiter(System.IO.Stream,System.Text.Encoding,System.Int32,System.Int32,System.String[])">
            <summary>
            Tries to detect the delimiter of a CSV file and returns a <see cref="T:System.String" /> indicating the delimiter, or <see langword="null" />, if it could not be detected.
            For detection, a specified number of rows is tested for various delimiters. By default, a minimum of 2 rows is required and up to 10 rows are tested. The tested delimiters are ",", ";", "\t" and "|". If all rows have the same column count and the column count is greater than 1, the tested delimiter is considered correct.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream" /> from which to read the flat file database from. The <see cref="T:System.IO.Stream" /> is read multiple times and the position is reset before this method returns.</param>
            <param name="encoding">The encoding to use if encoding is not determined from the file. Specify <see langword="null" /> to detect encoding automatically or provide a value to explicitly parse with a specific <see cref="T:System.Text.Encoding" />.</param>
            <param name="minimumRowsToTest">A <see cref="T:System.Int32" /> value specifying the minimum number of rows that the CSV file must have. The default value is 2.</param>
            <param name="maximumRowsToTest">A <see cref="T:System.Int32" /> value specifying the maximum number of rows that will be tested. If the file has less rows, the complete file is tested. The default value is 10.</param>
            <param name="delimitersToTest">A <see cref="T:System.String" />[] specifying the delimiters to test for in the specified order. By default, ",", ";", "\t" and "|" are tested.</param>
            <returns>
            The detected delimiter, or <see langword="null" />, if no definite delimiter was detected.
            </returns>
        </member>
        <member name="M:BytecodeApi.FileFormats.Csv.CsvFile.SaveRows(System.String,System.Collections.Generic.IEnumerable{BytecodeApi.FileFormats.Csv.CsvRow},System.String)">
            <summary>
            Writes an enumerable collection of <see cref="T:BytecodeApi.FileFormats.Csv.CsvRow" /> to a file. This method streams an <see cref="T:System.Collections.Generic.IEnumerable`1" /> into the file and does not require to load all rows into memory and is typically used for large files that are processed in a <see langword="foreach" /> loop.
            </summary>
            <param name="path">A <see cref="T:System.String" /> specifying the path of a file to which the rows are written to.</param>
            <param name="rows">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> with the rows to write to the file.</param>
            <param name="delimiter">A <see cref="T:System.String" /> specifying the delimiter to use to write to the file.</param>
        </member>
        <member name="M:BytecodeApi.FileFormats.Csv.CsvFile.SaveRows(System.String,System.Collections.Generic.IEnumerable{BytecodeApi.FileFormats.Csv.CsvRow},System.String,System.Boolean)">
            <summary>
            Writes an enumerable collection of <see cref="T:BytecodeApi.FileFormats.Csv.CsvRow" /> to a file. This method streams an <see cref="T:System.Collections.Generic.IEnumerable`1" /> into the file and does not require to load all rows into memory and is typically used for large files that are processed in a <see langword="foreach" /> loop.
            </summary>
            <param name="path">A <see cref="T:System.String" /> specifying the path of a file to which the rows are written to.</param>
            <param name="rows">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> with the rows to write to the file.</param>
            <param name="delimiter">A <see cref="T:System.String" /> specifying the delimiter to use to write to the file.</param>
            <param name="alwaysQuote"><see langword="true" /> to wrap all cells with quotes; <see langword="false" /> to only use quotes when needed.</param>
        </member>
        <member name="M:BytecodeApi.FileFormats.Csv.CsvFile.SaveRows(System.String,System.Collections.Generic.IEnumerable{BytecodeApi.FileFormats.Csv.CsvRow},System.String,System.Boolean,System.Text.Encoding)">
            <summary>
            Writes an enumerable collection of <see cref="T:BytecodeApi.FileFormats.Csv.CsvRow" /> to a file. This method streams an <see cref="T:System.Collections.Generic.IEnumerable`1" /> into the file and does not require to load all rows into memory and is typically used for large files that are processed in a <see langword="foreach" /> loop.
            </summary>
            <param name="path">A <see cref="T:System.String" /> specifying the path of a file to which the rows are written to.</param>
            <param name="rows">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> with the rows to write to the file.</param>
            <param name="delimiter">A <see cref="T:System.String" /> specifying the delimiter to use to write to the file.</param>
            <param name="alwaysQuote"><see langword="true" /> to wrap all cells with quotes; <see langword="false" /> to only use quotes when needed.</param>
            <param name="encoding">The encoding to use to write to the file.</param>
        </member>
        <member name="M:BytecodeApi.FileFormats.Csv.CsvFile.SaveRows(System.IO.Stream,System.Collections.Generic.IEnumerable{BytecodeApi.FileFormats.Csv.CsvRow},System.String)">
            <summary>
            Writes an enumerable collection of <see cref="T:BytecodeApi.FileFormats.Csv.CsvRow" /> to a <see cref="T:System.IO.Stream" />. This method streams an <see cref="T:System.Collections.Generic.IEnumerable`1" /> into the <see cref="T:System.IO.Stream" /> and does not require to load all rows into memory and is typically used for large files that are processed in a <see langword="foreach" /> loop.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream" /> to which the rows are written to.</param>
            <param name="rows">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> with the rows to write to the <see cref="T:System.IO.Stream" />.</param>
            <param name="delimiter">A <see cref="T:System.String" /> specifying the delimiter to use to write to the <see cref="T:System.IO.Stream" />.</param>
        </member>
        <member name="M:BytecodeApi.FileFormats.Csv.CsvFile.SaveRows(System.IO.Stream,System.Collections.Generic.IEnumerable{BytecodeApi.FileFormats.Csv.CsvRow},System.String,System.Boolean)">
            <summary>
            Writes an enumerable collection of <see cref="T:BytecodeApi.FileFormats.Csv.CsvRow" /> to a <see cref="T:System.IO.Stream" />. This method streams an <see cref="T:System.Collections.Generic.IEnumerable`1" /> into the <see cref="T:System.IO.Stream" /> and does not require to load all rows into memory and is typically used for large files that are processed in a <see langword="foreach" /> loop.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream" /> to which the rows are written to.</param>
            <param name="rows">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> with the rows to write to the <see cref="T:System.IO.Stream" />.</param>
            <param name="delimiter">A <see cref="T:System.String" /> specifying the delimiter to use to write to the <see cref="T:System.IO.Stream" />.</param>
            <param name="alwaysQuote"><see langword="true" /> to wrap all cells with quotes; <see langword="false" /> to only use quotes when needed.</param>
        </member>
        <member name="M:BytecodeApi.FileFormats.Csv.CsvFile.SaveRows(System.IO.Stream,System.Collections.Generic.IEnumerable{BytecodeApi.FileFormats.Csv.CsvRow},System.String,System.Boolean,System.Text.Encoding)">
            <summary>
            Writes an enumerable collection of <see cref="T:BytecodeApi.FileFormats.Csv.CsvRow" /> to a <see cref="T:System.IO.Stream" />. This method streams an <see cref="T:System.Collections.Generic.IEnumerable`1" /> into the <see cref="T:System.IO.Stream" /> and does not require to load all rows into memory and is typically used for large files that are processed in a <see langword="foreach" /> loop.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream" /> to which the rows are written to.</param>
            <param name="rows">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> with the rows to write to the <see cref="T:System.IO.Stream" />.</param>
            <param name="delimiter">A <see cref="T:System.String" /> specifying the delimiter to use to write to the <see cref="T:System.IO.Stream" />.</param>
            <param name="alwaysQuote"><see langword="true" /> to wrap all cells with quotes; <see langword="false" /> to only use quotes when needed.</param>
            <param name="encoding">The encoding to use to write to the <see cref="T:System.IO.Stream" />.</param>
        </member>
        <member name="M:BytecodeApi.FileFormats.Csv.CsvFile.SaveRows(System.IO.Stream,System.Collections.Generic.IEnumerable{BytecodeApi.FileFormats.Csv.CsvRow},System.String,System.Boolean,System.Text.Encoding,System.Boolean)">
            <summary>
            Writes an enumerable collection of <see cref="T:BytecodeApi.FileFormats.Csv.CsvRow" /> to a <see cref="T:System.IO.Stream" />. This method streams an <see cref="T:System.Collections.Generic.IEnumerable`1" /> into the <see cref="T:System.IO.Stream" /> and does not require to load all rows into memory and is typically used for large files that are processed in a <see langword="foreach" /> loop.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream" /> to which the rows are written to.</param>
            <param name="rows">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> with the rows to write to the <see cref="T:System.IO.Stream" />.</param>
            <param name="delimiter">A <see cref="T:System.String" /> specifying the delimiter to use to write to the <see cref="T:System.IO.Stream" />.</param>
            <param name="alwaysQuote"><see langword="true" /> to wrap all cells with quotes; <see langword="false" /> to only use quotes when needed.</param>
            <param name="encoding">The encoding to use to write to the <see cref="T:System.IO.Stream" />.</param>
            <param name="leaveOpen">A <see cref="T:System.Boolean" /> value indicating whether to leave <paramref name="stream" /> open.</param>
        </member>
        <member name="M:BytecodeApi.FileFormats.Csv.CsvFile.CheckColumnCount(System.Int32)">
            <summary>
            Checks whether the column count of all rows is equal to <paramref name="columnCount" />, excluding the <see cref="P:BytecodeApi.FileFormats.Csv.CsvFile.Headers" /> property and error rows.
            </summary>
            <param name="columnCount">A <see cref="T:System.Int32" /> value specifying the expected column count for all rows.</param>
            <returns>
            <see langword="true" />, if the column count of all rows is equal to <paramref name="columnCount" />, or it no rows were imported;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.FileFormats.Csv.CsvFile.GetColumnIndex(System.String)">
            <summary>
            Tries to find the column index of a specified case sensitive column header name. Returns -1, if the column header was not found.
            </summary>
            <param name="header">A <see cref="T:System.String" /> specifying the case sensitive name of the column header to search for.</param>
            <returns>
            The zero-based index of the column header, or -1, if the column header was not found.
            </returns>
        </member>
        <member name="M:BytecodeApi.FileFormats.Csv.CsvFile.GetColumnIndex(System.String,System.Boolean)">
            <summary>
            Tries to find the column index of a specified case header name. Returns -1, if the column header was not found.
            </summary>
            <param name="header">A <see cref="T:System.String" /> specifying the case sensitive name of the column header to search for.</param>
            <param name="ignoreCase"><see langword="true" /> to ignore character casing during column name comparison.</param>
            <returns>
            The zero-based index of the column header, or -1, if the column header was not found.
            </returns>
        </member>
        <member name="M:BytecodeApi.FileFormats.Csv.CsvFile.Save(System.String)">
            <summary>
            Writes the contents of this flat file database to a file. If <see cref="P:BytecodeApi.FileFormats.Csv.CsvFile.Headers" /> is not <see langword="null" />, the header row is included. The <see cref="P:BytecodeApi.FileFormats.Csv.CsvFile.Delimiter" /> property specifies the delimiter to use when writing.
            </summary>
            <param name="path">A <see cref="T:System.String" /> specifying the path of a file to which this flat file database is written to.</param>
        </member>
        <member name="M:BytecodeApi.FileFormats.Csv.CsvFile.Save(System.String,System.Boolean)">
            <summary>
            Writes the contents of this flat file database to a file. If <see cref="P:BytecodeApi.FileFormats.Csv.CsvFile.Headers" /> is not <see langword="null" />, the header row is included. The <see cref="P:BytecodeApi.FileFormats.Csv.CsvFile.Delimiter" /> property specifies the delimiter to use when writing.
            </summary>
            <param name="path">A <see cref="T:System.String" /> specifying the path of a file to which this flat file database is written to.</param>
            <param name="excludeErrorRows"><see langword="true" /> to include parsed error lines; otherwise, <see langword="false" />.</param>
        </member>
        <member name="M:BytecodeApi.FileFormats.Csv.CsvFile.Save(System.String,System.Boolean,System.Boolean)">
            <summary>
            Writes the contents of this flat file database to a file. If <see cref="P:BytecodeApi.FileFormats.Csv.CsvFile.Headers" /> is not <see langword="null" />, the header row is included. The <see cref="P:BytecodeApi.FileFormats.Csv.CsvFile.Delimiter" /> property specifies the delimiter to use when writing.
            </summary>
            <param name="path">A <see cref="T:System.String" /> specifying the path of a file to which this flat file database is written to.</param>
            <param name="excludeErrorRows"><see langword="true" /> to include parsed error lines; otherwise, <see langword="false" />.</param>
            <param name="alwaysQuote"><see langword="true" /> to wrap all cells with quotes; <see langword="false" /> to only use quotes when needed.</param>
        </member>
        <member name="M:BytecodeApi.FileFormats.Csv.CsvFile.Save(System.String,System.Boolean,System.Boolean,System.Text.Encoding)">
            <summary>
            Writes the contents of this flat file database to a file. If <see cref="P:BytecodeApi.FileFormats.Csv.CsvFile.Headers" /> is not <see langword="null" />, the header row is included. The <see cref="P:BytecodeApi.FileFormats.Csv.CsvFile.Delimiter" /> property specifies the delimiter to use when writing.
            </summary>
            <param name="path">A <see cref="T:System.String" /> specifying the path of a file to which this flat file database is written to.</param>
            <param name="excludeErrorRows"><see langword="true" /> to include parsed error lines; otherwise, <see langword="false" />.</param>
            <param name="alwaysQuote"><see langword="true" /> to wrap all cells with quotes; <see langword="false" /> to only use quotes when needed.</param>
            <param name="encoding">The encoding to use to write to the file.</param>
        </member>
        <member name="M:BytecodeApi.FileFormats.Csv.CsvFile.Save(System.IO.Stream)">
            <summary>
            Writes the contents of this flat file database to a <see cref="T:System.IO.Stream" />. If <see cref="P:BytecodeApi.FileFormats.Csv.CsvFile.Headers" /> is not <see langword="null" />, the header row is included. The <see cref="P:BytecodeApi.FileFormats.Csv.CsvFile.Delimiter" /> property specifies the delimiter to use when writing.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream" /> to which this flat file database is written to.</param>
        </member>
        <member name="M:BytecodeApi.FileFormats.Csv.CsvFile.Save(System.IO.Stream,System.Boolean)">
            <summary>
            Writes the contents of this flat file database to a <see cref="T:System.IO.Stream" />. If <see cref="P:BytecodeApi.FileFormats.Csv.CsvFile.Headers" /> is not <see langword="null" />, the header row is included. The <see cref="P:BytecodeApi.FileFormats.Csv.CsvFile.Delimiter" /> property specifies the delimiter to use when writing.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream" /> to which this flat file database is written to.</param>
            <param name="excludeErrorRows"><see langword="true" /> to include parsed error lines; otherwise, <see langword="false" />.</param>
        </member>
        <member name="M:BytecodeApi.FileFormats.Csv.CsvFile.Save(System.IO.Stream,System.Boolean,System.Boolean)">
            <summary>
            Writes the contents of this flat file database to a <see cref="T:System.IO.Stream" />. If <see cref="P:BytecodeApi.FileFormats.Csv.CsvFile.Headers" /> is not <see langword="null" />, the header row is included. The <see cref="P:BytecodeApi.FileFormats.Csv.CsvFile.Delimiter" /> property specifies the delimiter to use when writing.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream" /> to which this flat file database is written to.</param>
            <param name="excludeErrorRows"><see langword="true" /> to include parsed error lines; otherwise, <see langword="false" />.</param>
            <param name="alwaysQuote"><see langword="true" /> to wrap all cells with quotes; <see langword="false" /> to only use quotes when needed.</param>
        </member>
        <member name="M:BytecodeApi.FileFormats.Csv.CsvFile.Save(System.IO.Stream,System.Boolean,System.Boolean,System.Text.Encoding)">
            <summary>
            Writes the contents of this flat file database to a <see cref="T:System.IO.Stream" />. If <see cref="P:BytecodeApi.FileFormats.Csv.CsvFile.Headers" /> is not <see langword="null" />, the header row is included. The <see cref="P:BytecodeApi.FileFormats.Csv.CsvFile.Delimiter" /> property specifies the delimiter to use when writing.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream" /> to which this flat file database is written to.</param>
            <param name="excludeErrorRows"><see langword="true" /> to include parsed error lines; otherwise, <see langword="false" />.</param>
            <param name="alwaysQuote"><see langword="true" /> to wrap all cells with quotes; <see langword="false" /> to only use quotes when needed.</param>
            <param name="encoding">The encoding to use to write to the file.</param>
        </member>
        <member name="M:BytecodeApi.FileFormats.Csv.CsvFile.Save(System.IO.Stream,System.Boolean,System.Boolean,System.Text.Encoding,System.Boolean)">
            <summary>
            Writes the contents of this flat file database to a <see cref="T:System.IO.Stream" />. If <see cref="P:BytecodeApi.FileFormats.Csv.CsvFile.Headers" /> is not <see langword="null" />, the header row is included. The <see cref="P:BytecodeApi.FileFormats.Csv.CsvFile.Delimiter" /> property specifies the delimiter to use when writing.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream" /> to which this flat file database is written to.</param>
            <param name="excludeErrorRows"><see langword="true" /> to include parsed error lines; otherwise, <see langword="false" />.</param>
            <param name="alwaysQuote"><see langword="true" /> to wrap all cells with quotes; <see langword="false" /> to only use quotes when needed.</param>
            <param name="encoding">The encoding to use to write to the file.</param>
            <param name="leaveOpen">A <see cref="T:System.Boolean" /> value indicating whether to leave <paramref name="stream" /> open.</param>
        </member>
        <member name="T:BytecodeApi.FileFormats.Csv.CsvRow">
            <summary>
            Represents a row of a <see cref="T:BytecodeApi.FileFormats.Csv.CsvFile" /> flat file database.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Csv.CsvRow.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:BytecodeApi.FileFormats.Csv.CsvCell" /> at the specified column index.
            </summary>
            <param name="index">The zero-based column index.</param>
        </member>
        <member name="P:BytecodeApi.FileFormats.Csv.CsvRow.Item(System.String)">
            <summary>
            Gets or sets the <see cref="T:BytecodeApi.FileFormats.Csv.CsvCell" /> at the specified column name, represented as an Excel column name (like A, B, ... AA, AB, ...).
            </summary>
            <param name="column">A <see cref="T:System.String" /> specifying the one-based column index, represented as an Excel column name (like A, B, ... AA, AB, ...).</param>
        </member>
        <member name="P:BytecodeApi.FileFormats.Csv.CsvRow.Count">
            <summary>
            Gets the number of cells in this <see cref="T:BytecodeApi.FileFormats.Csv.CsvRow" />.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Csv.CsvRow.LineNumber">
            <summary>
            Gets the one-based line number of this <see cref="T:BytecodeApi.FileFormats.Csv.CsvRow" /> object, if it was loaded from an existing flat file database source. Returns <see langword="null" />, if the row has been manually initialized.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Csv.CsvRow.ErrorLine">
            <summary>
            If the line could not be parsed, gets the <see cref="T:System.String" /> representing the original line, otherwise returns <see langword="null" />.
            </summary>
        </member>
        <member name="M:BytecodeApi.FileFormats.Csv.CsvRow.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.FileFormats.Csv.CsvRow" /> class.
            </summary>
        </member>
        <member name="M:BytecodeApi.FileFormats.Csv.CsvRow.#ctor(System.Collections.Generic.IEnumerable{BytecodeApi.FileFormats.Csv.CsvCell})">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.FileFormats.Csv.CsvRow" /> class with a collection of cells.
            </summary>
            <param name="cells">The collection of cells to be added to this <see cref="T:BytecodeApi.FileFormats.Csv.CsvRow" />.</param>
        </member>
        <member name="M:BytecodeApi.FileFormats.Csv.CsvRow.#ctor(BytecodeApi.FileFormats.Csv.CsvCell[])">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.FileFormats.Csv.CsvRow" /> class with a collection of cells.
            </summary>
            <param name="cells">The collection of cells to be added to this <see cref="T:BytecodeApi.FileFormats.Csv.CsvRow" />.</param>
        </member>
        <member name="M:BytecodeApi.FileFormats.Csv.CsvRow.#ctor(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.FileFormats.Csv.CsvRow" /> class with a collection of cells.
            </summary>
            <param name="cells">The collection of cells to be added to this <see cref="T:BytecodeApi.FileFormats.Csv.CsvRow" />, represented as <see cref="T:System.String" /> objects.</param>
        </member>
        <member name="M:BytecodeApi.FileFormats.Csv.CsvRow.#ctor(System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.FileFormats.Csv.CsvRow" /> class with a collection of cells.
            </summary>
            <param name="cells">The collection of cells to be added to this <see cref="T:BytecodeApi.FileFormats.Csv.CsvRow" />, represented as <see cref="T:System.String" /> objects.</param>
        </member>
        <member name="M:BytecodeApi.FileFormats.Csv.CsvRow.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:BytecodeApi.FileFormats.Csv.CsvRow.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the <see cref="T:BytecodeApi.FileFormats.Csv.CsvRow" /> cell collection.
            </summary>
            <returns>
            An enumerator that can be used to iterate through the <see cref="T:BytecodeApi.FileFormats.Csv.CsvRow" /> cell collection.
            </returns>
        </member>
        <member name="T:BytecodeApi.FileFormats.Csv.CsvRowCollection">
            <summary>
            Represents a collection of <see cref="T:BytecodeApi.FileFormats.Csv.CsvRow" /> objects.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Csv.CsvRowCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:BytecodeApi.FileFormats.Csv.CsvRow" /> at the specified index.
            </summary>
            <param name="index">The index at which to retrieve the <see cref="T:BytecodeApi.FileFormats.Csv.CsvRow" />.</param>
        </member>
        <member name="P:BytecodeApi.FileFormats.Csv.CsvRowCollection.Count">
            <summary>
            Gets the number of rows in this <see cref="T:BytecodeApi.FileFormats.Csv.CsvRowCollection" />.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Csv.CsvRowCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:BytecodeApi.FileFormats.Csv.CsvRowCollection" /> is read-only.
            </summary>
        </member>
        <member name="M:BytecodeApi.FileFormats.Csv.CsvRowCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.FileFormats.Csv.CsvRowCollection" /> class.
            </summary>
        </member>
        <member name="M:BytecodeApi.FileFormats.Csv.CsvRowCollection.Add(BytecodeApi.FileFormats.Csv.CsvRow)">
            <summary>
            Adds an <see cref="T:BytecodeApi.FileFormats.Csv.CsvRow" /> to the end of the <see cref="T:BytecodeApi.FileFormats.Csv.CsvRowCollection" />.
            </summary>
            <param name="item">The <see cref="T:BytecodeApi.FileFormats.Csv.CsvRow" /> to be added to the end of the <see cref="T:BytecodeApi.FileFormats.Csv.CsvRowCollection" />.</param>
        </member>
        <member name="M:BytecodeApi.FileFormats.Csv.CsvRowCollection.Remove(BytecodeApi.FileFormats.Csv.CsvRow)">
            <summary>
            Removes the first occurrence of a specific <see cref="T:BytecodeApi.FileFormats.Csv.CsvRow" /> from the <see cref="T:BytecodeApi.FileFormats.Csv.CsvRowCollection" />.
            </summary>
            <param name="item">The <see cref="T:BytecodeApi.FileFormats.Csv.CsvRow" /> to remove from the <see cref="T:BytecodeApi.FileFormats.Csv.CsvRowCollection" />.</param>
            <returns>
            <see langword="true" />, if <paramref name="item" /> is successfully removed;
            otherwise, <see langword="false" />.
            This method also returns <see langword="false" />, if <paramref name="item" /> was not found in the <see cref="T:BytecodeApi.FileFormats.Csv.CsvRowCollection" />.</returns>
        </member>
        <member name="M:BytecodeApi.FileFormats.Csv.CsvRowCollection.Clear">
            <summary>
            Removes all elements from the <see cref="T:BytecodeApi.FileFormats.Csv.CsvRowCollection" />.
            </summary>
        </member>
        <member name="M:BytecodeApi.FileFormats.Csv.CsvRowCollection.Contains(BytecodeApi.FileFormats.Csv.CsvRow)">
            <summary>
            Determines whether an element is in the <see cref="T:BytecodeApi.FileFormats.Csv.CsvRowCollection" />.
            </summary>
            <param name="item">The <see cref="T:BytecodeApi.FileFormats.Csv.CsvRow" /> to locate in the <see cref="T:BytecodeApi.FileFormats.Csv.CsvRowCollection" />.</param>
            <returns>
            <see langword="true" />, if <paramref name="item" /> is found in the <see cref="T:BytecodeApi.FileFormats.Csv.CsvRowCollection" />;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.FileFormats.Csv.CsvRowCollection.CopyTo(BytecodeApi.FileFormats.Csv.CsvRow[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:BytecodeApi.FileFormats.Csv.CsvRowCollection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:BytecodeApi.FileFormats.Csv.CsvRowCollection" />.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array" /> at which copying begins.</param>
        </member>
        <member name="M:BytecodeApi.FileFormats.Csv.CsvRowCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the <see cref="T:BytecodeApi.FileFormats.Csv.CsvRowCollection" />.
            </summary>
            <returns>
            An enumerator that can be used to iterate through the <see cref="T:BytecodeApi.FileFormats.Csv.CsvRowCollection" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.FileFormats.Ini.IniFileFormattingOptions">
            <summary>
            Represents a set of formatting options for INI files that specify how an INI file is exported when using <see cref="M:BytecodeApi.FileFormats.Ini.IniFile.Save(System.String)" />.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Ini.IniFileFormattingOptions.PropertyDelimiter">
            <summary>
            Gets or sets a value specifying what delimiter is used between property names and values.
            <para>The default value is <see cref="F:BytecodeApi.FileFormats.Ini.IniPropertyDelimiter.EqualSign" />.</para>
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Ini.IniFileFormattingOptions.UseDelimiterSpaceBefore">
            <summary>
            <see langword="true" /> to use a space before the delimiter; <see langword="false" /> to append the delimiter directly after the property name.
            <para>The default value is <see langword="true" />.</para>
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Ini.IniFileFormattingOptions.UseDelimiterSpaceAfter">
            <summary>
            <see langword="true" /> to use a space after the delimiter; <see langword="false" /> to append the property value directly after the delimiter.
            <para>The default value is <see langword="true" />.</para>
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Ini.IniFileFormattingOptions.UseNewLineBetweenSections">
            <summary>
            <see langword="true" /> to add a linebreak between each section; otherwise, <see langword="false" />.
            <para>The default value is <see langword="true" />.</para>
            </summary>
        </member>
        <member name="M:BytecodeApi.FileFormats.Ini.IniFileFormattingOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.FileFormats.Ini.IniFileFormattingOptions" /> class with default formatting options.
            </summary>
        </member>
        <member name="T:BytecodeApi.FileFormats.Ini.IniPropertyDelimiter">
            <summary>
            Specifies the delimiter between INI property names and values.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Ini.IniPropertyDelimiter.EqualSign">
            <summary>
            Specifies that the name and the value of INI properties are separated by an equal sign ("=")
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Ini.IniPropertyDelimiter.Colon">
            <summary>
            Specifies that the name and the value of INI properties are separated by a colon (":")
            </summary>
        </member>
        <member name="T:BytecodeApi.FileFormats.Ini.IniDuplicatePropertyNameBehavior">
            <summary>
            Specifies how duplicate property names of INI files are treated.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Ini.IniDuplicatePropertyNameBehavior.Abort">
            <summary>
            Specifies that an <see cref="T:BytecodeApi.FileFormats.Ini.IniParsingException" /> is thrown, unless <see cref="P:BytecodeApi.FileFormats.Ini.IniFileParsingOptions.IgnoreErrors" /> is set to <see langword="true" />.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Ini.IniDuplicatePropertyNameBehavior.Ignore">
            <summary>
            Specifies that the property is ignored.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Ini.IniDuplicatePropertyNameBehavior.Overwrite">
            <summary>
            Specifies that the property overwrites the value of the existing property within the scope of its <see cref="T:BytecodeApi.FileFormats.Ini.IniSection" />.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Ini.IniDuplicatePropertyNameBehavior.Duplicate">
            <summary>
            Specifies that a new <see cref="T:BytecodeApi.FileFormats.Ini.IniProperty" /> object is created each time.
            </summary>
        </member>
        <member name="T:BytecodeApi.FileFormats.Ini.IniDuplicateSectionNameBehavior">
            <summary>
            Specifies how duplicate section names of INI files are treated.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Ini.IniDuplicateSectionNameBehavior.Abort">
            <summary>
            Specifies that an <see cref="T:BytecodeApi.FileFormats.Ini.IniParsingException" /> is thrown, unless <see cref="P:BytecodeApi.FileFormats.Ini.IniFileParsingOptions.IgnoreErrors" /> is set to <see langword="true" />.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Ini.IniDuplicateSectionNameBehavior.Ignore">
            <summary>
            Specifies that the section and its content are ignored and parsing is skipped to the next section.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Ini.IniDuplicateSectionNameBehavior.Merge">
            <summary>
            Specifies that properties of the section are added to the existing <see cref="T:BytecodeApi.FileFormats.Ini.IniSection" /> object, instead of creating a new <see cref="T:BytecodeApi.FileFormats.Ini.IniSection" />.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.Ini.IniDuplicateSectionNameBehavior.Duplicate">
            <summary>
            Specifies that a new <see cref="T:BytecodeApi.FileFormats.Ini.IniSection" /> object is created each time.
            </summary>
        </member>
        <member name="T:BytecodeApi.FileFormats.Ini.IniErrorLine">
            <summary>
            Represents a line of an <see cref="T:BytecodeApi.FileFormats.Ini.IniFile" /> that could not be parsed.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Ini.IniErrorLine.LineNumber">
            <summary>
            Gets the one-based line number of the line at which parsing failed.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Ini.IniErrorLine.Line">
            <summary>
            Gets the line at which parsing failed as its original <see cref="T:System.String" /> representation.
            </summary>
        </member>
        <member name="M:BytecodeApi.FileFormats.Ini.IniErrorLine.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.FileFormats.Ini.IniErrorLine" /> class with the specified line number and line.
            </summary>
            <param name="lineNumber">The one-based line number of the line at which parsing failed.</param>
            <param name="line">The line at which parsing failed as its original <see cref="T:System.String" /> representation.</param>
        </member>
        <member name="T:BytecodeApi.FileFormats.Ini.IniFile">
            <summary>
            Represents an INI file.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Ini.IniFile.GlobalProperties">
            <summary>
            Gets the <see cref="T:BytecodeApi.FileFormats.Ini.IniSection" /> containing all properties prior to the first section declaration associated with this INI file.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Ini.IniFile.Sections">
            <summary>
            Gets the collection of INI sections associated with this INI file.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Ini.IniFile.ErrorLines">
            <summary>
            Gets the collection of lines that could not be parsed. This collection popuplated, if <see cref="P:BytecodeApi.FileFormats.Ini.IniFileParsingOptions.IgnoreErrors" /> is set to <see langword="true" />.
            </summary>
        </member>
        <member name="M:BytecodeApi.FileFormats.Ini.IniFile.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.FileFormats.Ini.IniFile" /> class.
            </summary>
        </member>
        <member name="M:BytecodeApi.FileFormats.Ini.IniFile.FromFile(System.String)">
            <summary>
            Creates an <see cref="T:BytecodeApi.FileFormats.Ini.IniFile" /> object from the specified file.
            </summary>
            <param name="path">A <see cref="T:System.String" /> representing the path to an INI file.</param>
            <returns>
            The <see cref="T:BytecodeApi.FileFormats.Ini.IniFile" /> this method creates.
            </returns>
        </member>
        <member name="M:BytecodeApi.FileFormats.Ini.IniFile.FromFile(System.String,System.Text.Encoding)">
            <summary>
            Creates an <see cref="T:BytecodeApi.FileFormats.Ini.IniFile" /> object from the specified file.
            </summary>
            <param name="path">A <see cref="T:System.String" /> representing the path to an INI file.</param>
            <param name="encoding">The encoding to use to read the file.</param>
            <returns>
            The <see cref="T:BytecodeApi.FileFormats.Ini.IniFile" /> this method creates.
            </returns>
        </member>
        <member name="M:BytecodeApi.FileFormats.Ini.IniFile.FromFile(System.String,System.Text.Encoding,BytecodeApi.FileFormats.Ini.IniFileParsingOptions)">
            <summary>
            Creates an <see cref="T:BytecodeApi.FileFormats.Ini.IniFile" /> object from the specified file.
            </summary>
            <param name="path">A <see cref="T:System.String" /> representing the path to an INI file.</param>
            <param name="encoding">The encoding to use to read the file.</param>
            <param name="parsingOptions">A <see cref="T:BytecodeApi.FileFormats.Ini.IniFileParsingOptions" /> object with format specifications for INI parsing, or <see langword="null" /> to use default parsing options.</param>
            <returns>
            The <see cref="T:BytecodeApi.FileFormats.Ini.IniFile" /> this method creates.
            </returns>
        </member>
        <member name="M:BytecodeApi.FileFormats.Ini.IniFile.FromBinary(System.Byte[])">
            <summary>
            Creates an <see cref="T:BytecodeApi.FileFormats.Ini.IniFile" /> object from the specified <see cref="T:System.Byte" />[] that represents an INI file.
            </summary>
            <param name="file">The <see cref="T:System.Byte" />[] that represents an INI file to parse.</param>
            <returns>
            The <see cref="T:BytecodeApi.FileFormats.Ini.IniFile" /> this method creates.
            </returns>
        </member>
        <member name="M:BytecodeApi.FileFormats.Ini.IniFile.FromBinary(System.Byte[],System.Text.Encoding)">
            <summary>
            Creates an <see cref="T:BytecodeApi.FileFormats.Ini.IniFile" /> object from the specified <see cref="T:System.Byte" />[] that represents an INI file.
            </summary>
            <param name="file">The <see cref="T:System.Byte" />[] that represents an INI file to parse.</param>
            <param name="encoding">The encoding to use to read the file.</param>
            <returns>
            The <see cref="T:BytecodeApi.FileFormats.Ini.IniFile" /> this method creates.
            </returns>
        </member>
        <member name="M:BytecodeApi.FileFormats.Ini.IniFile.FromBinary(System.Byte[],System.Text.Encoding,BytecodeApi.FileFormats.Ini.IniFileParsingOptions)">
            <summary>
            Creates an <see cref="T:BytecodeApi.FileFormats.Ini.IniFile" /> object from the specified <see cref="T:System.Byte" />[] that represents an INI file.
            </summary>
            <param name="file">The <see cref="T:System.Byte" />[] that represents an INI file to parse.</param>
            <param name="encoding">The encoding to use to read the file.</param>
            <param name="parsingOptions">A <see cref="T:BytecodeApi.FileFormats.Ini.IniFileParsingOptions" /> object with format specifications for INI parsing, or <see langword="null" /> to use default parsing options.</param>
            <returns>
            The <see cref="T:BytecodeApi.FileFormats.Ini.IniFile" /> this method creates.
            </returns>
        </member>
        <member name="M:BytecodeApi.FileFormats.Ini.IniFile.FromStream(System.IO.Stream)">
            <summary>
            Creates an <see cref="T:BytecodeApi.FileFormats.Ini.IniFile" /> object from the specified <see cref="T:System.IO.Stream" />.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream" /> from which to parse the INI file from.</param>
            <returns>
            The <see cref="T:BytecodeApi.FileFormats.Ini.IniFile" /> this method creates.
            </returns>
        </member>
        <member name="M:BytecodeApi.FileFormats.Ini.IniFile.FromStream(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Creates an <see cref="T:BytecodeApi.FileFormats.Ini.IniFile" /> object from the specified <see cref="T:System.IO.Stream" />.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream" /> from which to parse the INI file from.</param>
            <param name="encoding">The encoding to use to read the file.</param>
            <returns>
            The <see cref="T:BytecodeApi.FileFormats.Ini.IniFile" /> this method creates.
            </returns>
        </member>
        <member name="M:BytecodeApi.FileFormats.Ini.IniFile.FromStream(System.IO.Stream,System.Text.Encoding,BytecodeApi.FileFormats.Ini.IniFileParsingOptions)">
            <summary>
            Creates an <see cref="T:BytecodeApi.FileFormats.Ini.IniFile" /> object from the specified <see cref="T:System.IO.Stream" />.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream" /> from which to parse the INI file from.</param>
            <param name="encoding">The encoding to use to read the file.</param>
            <param name="parsingOptions">A <see cref="T:BytecodeApi.FileFormats.Ini.IniFileParsingOptions" /> object with format specifications for INI parsing, or <see langword="null" /> to use default parsing options.</param>
            <returns>
            The <see cref="T:BytecodeApi.FileFormats.Ini.IniFile" /> this method creates.
            </returns>
        </member>
        <member name="M:BytecodeApi.FileFormats.Ini.IniFile.FromStream(System.IO.Stream,System.Text.Encoding,BytecodeApi.FileFormats.Ini.IniFileParsingOptions,System.Boolean)">
            <summary>
            Creates an <see cref="T:BytecodeApi.FileFormats.Ini.IniFile" /> object from the specified <see cref="T:System.IO.Stream" />.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream" /> from which to parse the INI file from.</param>
            <param name="encoding">The encoding to use to read the file.</param>
            <param name="parsingOptions">A <see cref="T:BytecodeApi.FileFormats.Ini.IniFileParsingOptions" /> object with format specifications for INI parsing, or <see langword="null" /> to use default parsing options.</param>
            <param name="leaveOpen">A <see cref="T:System.Boolean" /> value indicating whether to leave <paramref name="stream" /> open.</param>
            <returns>
            The <see cref="T:BytecodeApi.FileFormats.Ini.IniFile" /> this method creates.
            </returns>
        </member>
        <member name="M:BytecodeApi.FileFormats.Ini.IniFile.Save(System.String)">
            <summary>
            Writes the contents of this INI file to a file.
            </summary>
            <param name="path">A <see cref="T:System.String" /> specifying the path of a file to which this INI file is written to.</param>
        </member>
        <member name="M:BytecodeApi.FileFormats.Ini.IniFile.Save(System.String,System.Text.Encoding)">
            <summary>
            Writes the contents of this INI file to a file.
            </summary>
            <param name="path">A <see cref="T:System.String" /> specifying the path of a file to which this INI file is written to.</param>
            <param name="encoding">The encoding to use to write to the file.</param>
        </member>
        <member name="M:BytecodeApi.FileFormats.Ini.IniFile.Save(System.String,System.Text.Encoding,BytecodeApi.FileFormats.Ini.IniFileFormattingOptions)">
            <summary>
            Writes the contents of this INI file to a file.
            </summary>
            <param name="path">A <see cref="T:System.String" /> specifying the path of a file to which this INI file is written to.</param>
            <param name="encoding">The encoding to use to write to the file.</param>
            <param name="formattingOptions">An <see cref="T:BytecodeApi.FileFormats.Ini.IniFileFormattingOptions" /> object specifying how to format the INI file.</param>
        </member>
        <member name="M:BytecodeApi.FileFormats.Ini.IniFile.Save(System.IO.Stream)">
            <summary>
            Writes the contents of this INI file to a <see cref="T:System.IO.Stream" />.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream" /> to which this INI file is written to.</param>
        </member>
        <member name="M:BytecodeApi.FileFormats.Ini.IniFile.Save(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Writes the contents of this INI file to a <see cref="T:System.IO.Stream" />.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream" /> to which this INI file is written to.</param>
            <param name="encoding">The encoding to use to write to the file.</param>
        </member>
        <member name="M:BytecodeApi.FileFormats.Ini.IniFile.Save(System.IO.Stream,System.Text.Encoding,BytecodeApi.FileFormats.Ini.IniFileFormattingOptions)">
            <summary>
            Writes the contents of this INI file to a <see cref="T:System.IO.Stream" />.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream" /> to which this INI file is written to.</param>
            <param name="encoding">The encoding to use to write to the file.</param>
            <param name="formattingOptions">An <see cref="T:BytecodeApi.FileFormats.Ini.IniFileFormattingOptions" /> object specifying how to format the INI file.</param>
        </member>
        <member name="M:BytecodeApi.FileFormats.Ini.IniFile.Save(System.IO.Stream,System.Text.Encoding,BytecodeApi.FileFormats.Ini.IniFileFormattingOptions,System.Boolean)">
            <summary>
            Writes the contents of this INI file to a <see cref="T:System.IO.Stream" />.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream" /> to which this INI file is written to.</param>
            <param name="encoding">The encoding to use to write to the file.</param>
            <param name="formattingOptions">An <see cref="T:BytecodeApi.FileFormats.Ini.IniFileFormattingOptions" /> object specifying how to format the INI file.</param>
            <param name="leaveOpen">A <see cref="T:System.Boolean" /> value indicating whether to leave <paramref name="stream" /> open.</param>
        </member>
        <member name="T:BytecodeApi.FileFormats.Ini.IniFileParsingOptions">
            <summary>
            Represents a set of parsing options for INI files to support the common feature variations.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Ini.IniFileParsingOptions.IgnoreErrors">
            <summary>
            <see langword="true" /> to ignore parsing errors and add error lines to <see cref="P:BytecodeApi.FileFormats.Ini.IniFile.ErrorLines" />; <see langword="false" /> to throw an <see cref="T:BytecodeApi.FileFormats.Ini.IniParsingException" />.
            <para>The default value is <see langword="false" />.</para>
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Ini.IniFileParsingOptions.TrimSectionNames">
            <summary>
            Gets or sets a value indicating whether section names should be trimmed.
            <para>The default value is <see langword="true" />.</para>
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Ini.IniFileParsingOptions.TrimPropertyNames">
            <summary>
            Gets or sets a value indicating whether property names should be trimmed.
            <para>The default value is <see langword="true" />.</para>
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Ini.IniFileParsingOptions.TrimPropertyValues">
            <summary>
            Gets or sets a value indicating whether property values should be trimmed.
            <para>The default value is <see langword="true" />.</para>
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Ini.IniFileParsingOptions.AllowGlobalProperties">
            <summary>
            <see langword="true" /> to allow properties with no section and add them to <see cref="P:BytecodeApi.FileFormats.Ini.IniFile.GlobalProperties" />; <see langword="false" /> to throw an <see cref="T:BytecodeApi.FileFormats.Ini.IniParsingException" />.
            <para>The default value is <see langword="true" />.</para>
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Ini.IniFileParsingOptions.AllowSectionNameClosingBracket">
            <summary>
            <see langword="true" /> to allow section names containing closing brackets ("]"); <see langword="false" /> to throw an <see cref="T:BytecodeApi.FileFormats.Ini.IniParsingException" />.
            <para>The default value is <see langword="true" />.</para>
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Ini.IniFileParsingOptions.AllowEmptyLines">
            <summary>
            <see langword="true" /> to allow empty or whitespace lines; <see langword="false" /> to throw an <see cref="T:BytecodeApi.FileFormats.Ini.IniParsingException" />.
            <para>The default value is <see langword="true" />.</para>
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Ini.IniFileParsingOptions.PropertyDelimiter">
            <summary>
            Gets or sets a value specifying what delimiter is used between property names and values.
            <para>The default value is <see cref="F:BytecodeApi.FileFormats.Ini.IniPropertyDelimiter.EqualSign" />.</para>
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Ini.IniFileParsingOptions.AllowSemicolonComments">
            <summary>
            <see langword="true" /> to ignore lines that start with a semicolon; <see langword="false" /> to treat it as a normal character, which will be included in the property name.
            <para>The default value is <see langword="true" />.</para>
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Ini.IniFileParsingOptions.AllowNumberSignComments">
            <summary>
            <see langword="true" /> to ignore lines that start with a number sign ("#"); <see langword="false" /> to treat it as a normal character, which will be included in the property name.
            <para>The default value is <see langword="false" />.</para>
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Ini.IniFileParsingOptions.DuplicateSectionNameBehavior">
            <summary>
            Gets or sets how duplicate section names are treated.
            <para>The default value is <see cref="F:BytecodeApi.FileFormats.Ini.IniDuplicateSectionNameBehavior.Merge" />.</para>
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Ini.IniFileParsingOptions.DuplicateSectionNameIgnoreCase">
            <summary>
            Gets or sets a value indicating whether duplicate checking in section names should ignore character casing. The property <see cref="P:BytecodeApi.FileFormats.Ini.IniFileParsingOptions.DuplicateSectionNameBehavior" /> defines how duplicates are treated.
            <para>The default value is <see langword="true" />.</para>
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Ini.IniFileParsingOptions.DuplicatePropertyNameBehavior">
            <summary>
            Gets or sets how duplicate property names are treated.
            <para>The default value is <see cref="F:BytecodeApi.FileFormats.Ini.IniDuplicatePropertyNameBehavior.Duplicate" />.</para>
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Ini.IniFileParsingOptions.DuplicatePropertyNameIgnoreCase">
            <summary>
            Gets or sets a value indicating whether duplicate checking in property names should ignore character casing. The property <see cref="P:BytecodeApi.FileFormats.Ini.IniFileParsingOptions.DuplicatePropertyNameBehavior" /> defines how duplicates are treated.
            <para>The default value is <see langword="true" />.</para>
            </summary>
        </member>
        <member name="M:BytecodeApi.FileFormats.Ini.IniFileParsingOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.FileFormats.Ini.IniFileParsingOptions" /> class with default parsing options.
            </summary>
        </member>
        <member name="T:BytecodeApi.FileFormats.Ini.IniParsingException">
            <summary>
            The exception that is thrown when parsing of an <see cref="T:BytecodeApi.FileFormats.Ini.IniFile" /> fails.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Ini.IniParsingException.LineNumber">
            <summary>
            Gets the one-based line number of the line at which parsing failed.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Ini.IniParsingException.Line">
            <summary>
            Gets the line at which parsing failed as its original <see cref="T:System.String" /> representation.
            </summary>
        </member>
        <member name="M:BytecodeApi.FileFormats.Ini.IniParsingException.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.FileFormats.Ini.IniParsingException" /> class.
            </summary>
            <param name="lineNumber">The one-based line number of the line at which parsing failed.</param>
            <param name="line">The line at which parsing failed as its original <see cref="T:System.String" /> representation.</param>
        </member>
        <member name="T:BytecodeApi.FileFormats.Ini.IniProperty">
            <summary>
            Represents a property of an <see cref="T:BytecodeApi.FileFormats.Ini.IniFile" />.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Ini.IniProperty.Name">
            <summary>
            Gets or sets the name of this INI property.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Ini.IniProperty.Value">
            <summary>
            Gets or sets the value of this INI property.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Ini.IniProperty.Int32Value">
            <summary>
            Gets or sets the parsed <see cref="T:System.Int32" /> value of the <see cref="P:BytecodeApi.FileFormats.Ini.IniProperty.Value" /> property. If conversion fails, <see langword="null" /> is returned. Assigning a value sets the <see cref="P:BytecodeApi.FileFormats.Ini.IniProperty.Value" /> property by converting the value to a <see cref="T:System.String" />.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Ini.IniProperty.Int64Value">
            <summary>
            Gets or sets the parsed <see cref="T:System.Int64" /> value of the <see cref="P:BytecodeApi.FileFormats.Ini.IniProperty.Value" /> property. If conversion fails, <see langword="null" /> is returned. Assigning a value sets the <see cref="P:BytecodeApi.FileFormats.Ini.IniProperty.Value" /> property by converting the value to a <see cref="T:System.String" />.
            </summary>
        </member>
        <member name="M:BytecodeApi.FileFormats.Ini.IniProperty.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.FileFormats.Ini.IniProperty" /> class with the specified name and value.
            </summary>
            <param name="name">A <see cref="T:System.String" /> value specifying the name of this INI property.</param>
            <param name="value">A <see cref="T:System.String" /> value specifying the value of this INI property.</param>
        </member>
        <member name="M:BytecodeApi.FileFormats.Ini.IniProperty.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:BytecodeApi.FileFormats.Ini.IniPropertyCollection">
            <summary>
            Represents a collection of INI file properties.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Ini.IniPropertyCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:BytecodeApi.FileFormats.Ini.IniProperty" /> at the specified index.
            </summary>
            <param name="index">The index at which to retrieve the <see cref="T:BytecodeApi.FileFormats.Ini.IniProperty" />.</param>
        </member>
        <member name="P:BytecodeApi.FileFormats.Ini.IniPropertyCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:BytecodeApi.FileFormats.Ini.IniProperty" /> with the specified name.
            </summary>
            <param name="name">A <see cref="T:System.String" /> specifying the name of the property.</param>
        </member>
        <member name="P:BytecodeApi.FileFormats.Ini.IniPropertyCollection.Item(System.String,System.Boolean)">
            <summary>
            Gets the <see cref="T:BytecodeApi.FileFormats.Ini.IniProperty" /> with the specified name.
            </summary>
            <param name="name">A <see cref="T:System.String" /> specifying the name of the property.</param>
            <param name="ignoreCase"><see langword="true" /> to ignore character casing during name comparison.</param>
        </member>
        <member name="P:BytecodeApi.FileFormats.Ini.IniPropertyCollection.Item(System.String,System.String)">
            <summary>
            Gets the <see cref="T:BytecodeApi.FileFormats.Ini.IniProperty" /> with the specified name and returns a default value, if the property does not exist.
            </summary>
            <param name="name">A <see cref="T:System.String" /> specifying the name of the property.</param>
            <param name="defaultValue">A <see cref="T:System.String" /> specifying the value of the <see cref="T:BytecodeApi.FileFormats.Ini.IniProperty" /> that is created, if the property does not exist.</param>
        </member>
        <member name="P:BytecodeApi.FileFormats.Ini.IniPropertyCollection.Item(System.String,System.Boolean,System.String)">
            <summary>
            Gets the <see cref="T:BytecodeApi.FileFormats.Ini.IniProperty" /> with the specified name and returns a default value, if the property does not exist.
            </summary>
            <param name="name">A <see cref="T:System.String" /> specifying the name of the property.</param>
            <param name="ignoreCase"><see langword="true" /> to ignore character casing during name comparison.</param>
            <param name="defaultValue">A <see cref="T:System.String" /> specifying the value of the <see cref="T:BytecodeApi.FileFormats.Ini.IniProperty" /> that is created, if the property does not exist.</param>
        </member>
        <member name="P:BytecodeApi.FileFormats.Ini.IniPropertyCollection.Count">
            <summary>
            Gets the number of properties in this <see cref="T:BytecodeApi.FileFormats.Ini.IniPropertyCollection" />.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Ini.IniPropertyCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:BytecodeApi.FileFormats.Ini.IniPropertyCollection" /> is read-only.
            </summary>
        </member>
        <member name="M:BytecodeApi.FileFormats.Ini.IniPropertyCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.FileFormats.Ini.IniPropertyCollection" /> class.
            </summary>
        </member>
        <member name="M:BytecodeApi.FileFormats.Ini.IniPropertyCollection.HasProperty(System.String)">
            <summary>
            Determines whether a property with the specified name exists in this collection.
            </summary>
            <param name="name">The name of the property to check.</param>
            <returns>
            <see langword="true" />, if the property with the specified name exists;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.FileFormats.Ini.IniPropertyCollection.HasProperty(System.String,System.Boolean)">
            <summary>
            Determines whether a property with the specified name exists in this collection.
            </summary>
            <param name="name">The name of the property to check.</param>
            <param name="ignoreCase"><see langword="true" /> to ignore character casing during comparison.</param>
            <returns>
            <see langword="true" />, if the property with the specified name exists;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.FileFormats.Ini.IniPropertyCollection.ProcessDuplicates(BytecodeApi.FileFormats.Ini.IniDuplicatePropertyNameBehavior)">
            <summary>
            Processes all duplicate properties within this collection according to the specified behavior.
            </summary>
            <param name="behavior">An <see cref="T:BytecodeApi.FileFormats.Ini.IniDuplicatePropertyNameBehavior" /> object specifying how duplicates are processed.</param>
        </member>
        <member name="M:BytecodeApi.FileFormats.Ini.IniPropertyCollection.ProcessDuplicates(BytecodeApi.FileFormats.Ini.IniDuplicatePropertyNameBehavior,System.Boolean)">
            <summary>
            Processes all duplicate properties within this collection according to the specified behavior.
            </summary>
            <param name="behavior">An <see cref="T:BytecodeApi.FileFormats.Ini.IniDuplicatePropertyNameBehavior" /> object specifying how duplicates are processed.</param>
            <param name="ignoreCase"><see langword="true" /> to ignore character casing during name comparison.</param>
        </member>
        <member name="M:BytecodeApi.FileFormats.Ini.IniPropertyCollection.Add(BytecodeApi.FileFormats.Ini.IniProperty)">
            <summary>
            Adds an <see cref="T:BytecodeApi.FileFormats.Ini.IniProperty" /> to the end of the <see cref="T:BytecodeApi.FileFormats.Ini.IniPropertyCollection" />.
            </summary>
            <param name="item">The <see cref="T:BytecodeApi.FileFormats.Ini.IniProperty" /> to be added to the end of the <see cref="T:BytecodeApi.FileFormats.Ini.IniPropertyCollection" />.</param>
        </member>
        <member name="M:BytecodeApi.FileFormats.Ini.IniPropertyCollection.Remove(BytecodeApi.FileFormats.Ini.IniProperty)">
            <summary>
            Removes the first occurrence of a specific <see cref="T:BytecodeApi.FileFormats.Ini.IniProperty" /> from the <see cref="T:BytecodeApi.FileFormats.Ini.IniPropertyCollection" />.
            </summary>
            <param name="item">The <see cref="T:BytecodeApi.FileFormats.Ini.IniProperty" /> to remove from the <see cref="T:BytecodeApi.FileFormats.Ini.IniPropertyCollection" />.</param>
            <returns>
            <see langword="true" />, if <paramref name="item" /> is successfully removed;
            otherwise, <see langword="false" />.
            This method also returns <see langword="false" />, if <paramref name="item" /> was not found in the <see cref="T:BytecodeApi.FileFormats.Ini.IniPropertyCollection" />.</returns>
        </member>
        <member name="M:BytecodeApi.FileFormats.Ini.IniPropertyCollection.Clear">
            <summary>
            Removes all elements from the <see cref="T:BytecodeApi.FileFormats.Ini.IniPropertyCollection" />.
            </summary>
        </member>
        <member name="M:BytecodeApi.FileFormats.Ini.IniPropertyCollection.Contains(BytecodeApi.FileFormats.Ini.IniProperty)">
            <summary>
            Determines whether an element is in the <see cref="T:BytecodeApi.FileFormats.Ini.IniPropertyCollection" />.
            </summary>
            <param name="item">The <see cref="T:BytecodeApi.FileFormats.Ini.IniProperty" /> to locate in the <see cref="T:BytecodeApi.FileFormats.Ini.IniPropertyCollection" />.</param>
            <returns>
            <see langword="true" />, if <paramref name="item" /> is found in the <see cref="T:BytecodeApi.FileFormats.Ini.IniPropertyCollection" />;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.FileFormats.Ini.IniPropertyCollection.CopyTo(BytecodeApi.FileFormats.Ini.IniProperty[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:BytecodeApi.FileFormats.Ini.IniPropertyCollection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:BytecodeApi.FileFormats.Ini.IniPropertyCollection" />.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array" /> at which copying begins.</param>
        </member>
        <member name="M:BytecodeApi.FileFormats.Ini.IniPropertyCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the <see cref="T:BytecodeApi.FileFormats.Ini.IniPropertyCollection" />.
            </summary>
            <returns>
            An enumerator that can be used to iterate through the <see cref="T:BytecodeApi.FileFormats.Ini.IniPropertyCollection" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.FileFormats.Ini.IniSection">
            <summary>
            Represents a section of an <see cref="T:BytecodeApi.FileFormats.Ini.IniFile" />.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Ini.IniSection.Name">
            <summary>
            Gets or sets the name of this INI section.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Ini.IniSection.Properties">
            <summary>
            Gets the collection of INI properties associated with this section.
            </summary>
        </member>
        <member name="M:BytecodeApi.FileFormats.Ini.IniSection.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.FileFormats.Ini.IniSection" /> class.
            </summary>
            <param name="name">A <see cref="T:System.String" /> value specifying the name of this INI section.</param>
        </member>
        <member name="M:BytecodeApi.FileFormats.Ini.IniSection.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:BytecodeApi.FileFormats.Ini.IniSectionCollection">
            <summary>
            Represents a collection of INI file sections.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Ini.IniSectionCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:BytecodeApi.FileFormats.Ini.IniSection" /> at the specified index.
            </summary>
            <param name="index">The index at which to retrieve the <see cref="T:BytecodeApi.FileFormats.Ini.IniSection" />.</param>
        </member>
        <member name="P:BytecodeApi.FileFormats.Ini.IniSectionCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:BytecodeApi.FileFormats.Ini.IniSection" /> with the specified name.
            </summary>
            <param name="name">A <see cref="T:System.String" /> specifying the name of the section.</param>
        </member>
        <member name="P:BytecodeApi.FileFormats.Ini.IniSectionCollection.Item(System.String,System.Boolean)">
            <summary>
            Gets the <see cref="T:BytecodeApi.FileFormats.Ini.IniSection" /> with the specified name.
            </summary>
            <param name="name">A <see cref="T:System.String" /> specifying the name of the section.</param>
            <param name="ignoreCase"><see langword="true" /> to ignore character casing during name comparison.</param>
        </member>
        <member name="P:BytecodeApi.FileFormats.Ini.IniSectionCollection.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:BytecodeApi.FileFormats.Ini.IniSectionCollection" />.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.Ini.IniSectionCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:BytecodeApi.FileFormats.Ini.IniSectionCollection" /> is read-only.
            </summary>
        </member>
        <member name="M:BytecodeApi.FileFormats.Ini.IniSectionCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.FileFormats.Ini.IniSectionCollection" /> class.
            </summary>
        </member>
        <member name="M:BytecodeApi.FileFormats.Ini.IniSectionCollection.HasSection(System.String)">
            <summary>
            Determines whether a section with the specified name exists in this collection.
            </summary>
            <param name="name">The name of the section to check.</param>
            <returns>
            <see langword="true" />, if the section with the specified name exists;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.FileFormats.Ini.IniSectionCollection.HasSection(System.String,System.Boolean)">
            <summary>
            Determines whether a section with the specified name exists in this collection.
            </summary>
            <param name="name">The name of the section to check.</param>
            <param name="ignoreCase"><see langword="true" /> to ignore character casing during comparison.</param>
            <returns>
            <see langword="true" />, if the section with the specified name exists;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.FileFormats.Ini.IniSectionCollection.ProcessDuplicates(BytecodeApi.FileFormats.Ini.IniDuplicateSectionNameBehavior)">
            <summary>
            Processes all duplicate sections within this collection according to the specified behavior.
            </summary>
            <param name="behavior">An <see cref="T:BytecodeApi.FileFormats.Ini.IniDuplicateSectionNameBehavior" /> object specifying how duplicates are processed.</param>
        </member>
        <member name="M:BytecodeApi.FileFormats.Ini.IniSectionCollection.ProcessDuplicates(BytecodeApi.FileFormats.Ini.IniDuplicateSectionNameBehavior,System.Boolean)">
            <summary>
            Processes all duplicate sections within this collection according to the specified behavior.
            </summary>
            <param name="behavior">An <see cref="T:BytecodeApi.FileFormats.Ini.IniDuplicateSectionNameBehavior" /> object specifying how duplicates are processed.</param>
            <param name="ignoreCase"><see langword="true" /> to ignore character casing during name comparison.</param>
        </member>
        <member name="M:BytecodeApi.FileFormats.Ini.IniSectionCollection.Add(BytecodeApi.FileFormats.Ini.IniSection)">
            <summary>
            Adds an <see cref="T:BytecodeApi.FileFormats.Ini.IniSection" /> to the end of the <see cref="T:BytecodeApi.FileFormats.Ini.IniSectionCollection" />.
            </summary>
            <param name="item">The <see cref="T:BytecodeApi.FileFormats.Ini.IniSection" /> to be added to the end of the <see cref="T:BytecodeApi.FileFormats.Ini.IniSectionCollection" />.</param>
        </member>
        <member name="M:BytecodeApi.FileFormats.Ini.IniSectionCollection.Remove(BytecodeApi.FileFormats.Ini.IniSection)">
            <summary>
            Removes the first occurrence of a specific <see cref="T:BytecodeApi.FileFormats.Ini.IniSection" /> from the <see cref="T:BytecodeApi.FileFormats.Ini.IniSectionCollection" />.
            </summary>
            <param name="item">The <see cref="T:BytecodeApi.FileFormats.Ini.IniSection" /> to remove from the <see cref="T:BytecodeApi.FileFormats.Ini.IniSectionCollection" />.</param>
            <returns>
            <see langword="true" />, if <paramref name="item" /> is successfully removed;
            otherwise, <see langword="false" />.
            This method also returns <see langword="false" />, if <paramref name="item" /> was not found in the <see cref="T:BytecodeApi.FileFormats.Ini.IniSectionCollection" />.</returns>
        </member>
        <member name="M:BytecodeApi.FileFormats.Ini.IniSectionCollection.Clear">
            <summary>
            Removes all elements from the <see cref="T:BytecodeApi.FileFormats.Ini.IniSectionCollection" />.
            </summary>
        </member>
        <member name="M:BytecodeApi.FileFormats.Ini.IniSectionCollection.Contains(BytecodeApi.FileFormats.Ini.IniSection)">
            <summary>
            Determines whether an element is in the <see cref="T:BytecodeApi.FileFormats.Ini.IniSectionCollection" />.
            </summary>
            <param name="item">The <see cref="T:BytecodeApi.FileFormats.Ini.IniSection" /> to locate in the <see cref="T:BytecodeApi.FileFormats.Ini.IniSectionCollection" />.</param>
            <returns>
            <see langword="true" />, if <paramref name="item" /> is found in the <see cref="T:BytecodeApi.FileFormats.Ini.IniSectionCollection" />;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.FileFormats.Ini.IniSectionCollection.CopyTo(BytecodeApi.FileFormats.Ini.IniSection[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:BytecodeApi.FileFormats.Ini.IniSectionCollection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:BytecodeApi.FileFormats.Ini.IniSectionCollection" />.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array" /> at which copying begins.</param>
        </member>
        <member name="M:BytecodeApi.FileFormats.Ini.IniSectionCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the <see cref="T:BytecodeApi.FileFormats.Ini.IniSectionCollection" />.
            </summary>
            <returns>
            An enumerator that can be used to iterate through the <see cref="T:BytecodeApi.FileFormats.Ini.IniSectionCollection" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.FileFormats.ResourceFile.ResourceEntry`1">
            <summary>
            Represents a named resource entry of a PE file.
            </summary>
            <typeparam name="TData">The data type of the resource entry</typeparam>
        </member>
        <member name="P:BytecodeApi.FileFormats.ResourceFile.ResourceEntry`1.Type">
            <summary>
            Gets or sets the type of the resource entry.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.ResourceFile.ResourceEntry`1.Name">
            <summary>
            Gets or sets the name of the resource entry.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.ResourceFile.ResourceEntry`1.Data">
            <summary>
            Gets or sets the data representation of the resource entry.
            </summary>
        </member>
        <member name="M:BytecodeApi.FileFormats.ResourceFile.ResourceEntry`1.#ctor(BytecodeApi.FileFormats.ResourceFile.ResourceType,System.Int32,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.FileFormats.ResourceFile.ResourceEntry`1" /> class.
            </summary>
            <param name="type">The type of the <see cref="T:BytecodeApi.FileFormats.ResourceFile.ResourceEntry`1" />.</param>
            <param name="name">The name of the <see cref="T:BytecodeApi.FileFormats.ResourceFile.ResourceEntry`1" />.</param>
            <param name="data">The data representation of the <see cref="T:BytecodeApi.FileFormats.ResourceFile.ResourceEntry`1" />.</param>
        </member>
        <member name="T:BytecodeApi.FileFormats.ResourceFile.ResourceFileInfo">
            <summary>
            Provides properties and instance methods for native resources in portable executables, typically EXE and DLL files.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileFormats.ResourceFile.ResourceFileInfo.Path">
            <summary>
            Gets the path of the file.
            </summary>
        </member>
        <member name="M:BytecodeApi.FileFormats.ResourceFile.ResourceFileInfo.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.FileFormats.ResourceFile.ResourceFileInfo" /> class using the specified filename.
            </summary>
            <param name="path">A <see cref="T:System.String" /> specifying the path of a PE file.</param>
        </member>
        <member name="M:BytecodeApi.FileFormats.ResourceFile.ResourceFileInfo.GetResource(BytecodeApi.FileFormats.ResourceFile.ResourceType,System.Int32)">
            <summary>
            Extracts a resource from the file, specified by a name.
            </summary>
            <param name="type">A <see cref="T:BytecodeApi.FileFormats.ResourceFile.ResourceType" /> specifying the type of the resource.</param>
            <param name="name">A <see cref="T:System.Int32" /> value specifying the name of the resource.</param>
            <returns>
            A new <see cref="T:BytecodeApi.FileFormats.ResourceFile.ResourceEntry`1" /> of type <see cref="T:System.Byte" />[] with the resource from the file.
            </returns>
        </member>
        <member name="M:BytecodeApi.FileFormats.ResourceFile.ResourceFileInfo.GetGroupIconResources">
            <summary>
            Extracts all group icon resources from the file.
            </summary>
            <returns>
            A new collection of <see cref="T:BytecodeApi.FileFormats.ResourceFile.ResourceEntry`1" /> of type <see cref="T:System.Drawing.Icon" /> with all group icon resources from the file.
            </returns>
        </member>
        <member name="M:BytecodeApi.FileFormats.ResourceFile.ResourceFileInfo.GetGroupIconResource(System.Int32)">
            <summary>
            Extracts a group icon resource from the file, specified by a name.
            </summary>
            <param name="name">A <see cref="T:System.Int32" /> value specifying the name of the resource.</param>
            <returns>
            A new <see cref="T:BytecodeApi.FileFormats.ResourceFile.ResourceEntry`1" /> of type <see cref="T:System.Drawing.Icon" /> with the group icon resource from the file.
            </returns>
        </member>
        <member name="M:BytecodeApi.FileFormats.ResourceFile.ResourceFileInfo.ChangeIcon(System.String)">
            <summary>
            Changes the icon of the file to the specified icon file that is a valid ICO file.
            </summary>
            <param name="iconPath">A <see cref="T:System.String" /> specifying the path of a valid ICO file.</param>
        </member>
        <member name="M:BytecodeApi.FileFormats.ResourceFile.ResourceFileInfo.ChangeIcon(System.Drawing.Icon)">
            <summary>
            Changes the icon of the file to the specified icon.
            </summary>
            <param name="icon">The <see cref="T:System.Drawing.Icon" /> to be applied to the file.</param>
        </member>
        <member name="M:BytecodeApi.FileFormats.ResourceFile.ResourceFileInfo.DeleteResources">
            <summary>
            Strips all resources from the file.
            </summary>
        </member>
        <member name="T:BytecodeApi.FileFormats.ResourceFile.ResourceType">
            <summary>
            Specifies the type of a PE file resource.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.ResourceFile.ResourceType.Cursor">
            <summary>
            The resource type is RT_CURSOR.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.ResourceFile.ResourceType.Bitmap">
            <summary>
            The resource type is RT_BITMAP.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.ResourceFile.ResourceType.Icon">
            <summary>
            The resource type is RT_ICON.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.ResourceFile.ResourceType.Menu">
            <summary>
            The resource type is RT_MENU.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.ResourceFile.ResourceType.Dialog">
            <summary>
            The resource type is RT_DIALOG.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.ResourceFile.ResourceType.String">
            <summary>
            The resource type is RT_STRING.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.ResourceFile.ResourceType.FontDir">
            <summary>
            The resource type is RT_FONTDIR.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.ResourceFile.ResourceType.Font">
            <summary>
            The resource type is RT_FONT.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.ResourceFile.ResourceType.Accelerator">
            <summary>
            The resource type is RT_ACCELERATOR.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.ResourceFile.ResourceType.RCData">
            <summary>
            The resource type is RT_RCDATA.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.ResourceFile.ResourceType.MessageTable">
            <summary>
            The resource type is RT_MESSAGETABLE.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.ResourceFile.ResourceType.GroupCursor">
            <summary>
            The resource type is RT_GROUP_CURSOR.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.ResourceFile.ResourceType.GroupIcon">
            <summary>
            The resource type is RT_GROUP_ICON.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.ResourceFile.ResourceType.Version">
            <summary>
            The resource type is RT_VERSION.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.ResourceFile.ResourceType.DlgInclude">
            <summary>
            The resource type is RT_DLGINCLUDE.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.ResourceFile.ResourceType.PlugPlay">
            <summary>
            The resource type is RT_PLUGPLAY.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.ResourceFile.ResourceType.Vxd">
            <summary>
            The resource type is RT_VXD.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.ResourceFile.ResourceType.AniCursor">
            <summary>
            The resource type is RT_ANICURSOR.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.ResourceFile.ResourceType.AniIcon">
            <summary>
            The resource type is RT_ANIICON.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.ResourceFile.ResourceType.Html">
            <summary>
            The resource type is RT_HTML.
            </summary>
        </member>
        <member name="F:BytecodeApi.FileFormats.ResourceFile.ResourceType.Manifest">
            <summary>
            The resource type is RT_MANIFEST.
            </summary>
        </member>
    </members>
</doc>
